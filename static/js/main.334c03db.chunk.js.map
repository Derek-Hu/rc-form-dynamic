{"version":3,"sources":["components/form/example/login.module.less","components/form/example/search.module.less","rc-form-dynamic/index.js","components/example-list.jsx","components/codeview.jsx","components/form/example/basic.js","components/form/example/cascade.js","components/form/example/custom.js","components/form/example/layout.js","components/form/example/login.js","components/form/example/modal.js","components/form/example/register.js","components/form/example/search.js","components/form/example/time.js","Example.js","index.js","components/form/example/dynamicRule.js"],"names":["module","exports","create","onFieldsChange","props","changedFields","allFields","form","mapPropsToFields","fields","settings","formData","allKeys","reduce","allKey","field","key","Object","keys","formFields","fieldData","createFormField","value","onValuesChange","changedValues","allValues","forwardRef","ref","useImperativeHandle","fromProps","render","children","onSubmit","length","console","error","keyArgs","FieldInstances","batchKeys","currentBatchNumber","FormFieldsGetter","totalKey","defineProperty","get","FieldMap","forEach","hidden","parentProps","getFieldDecorator","component","decorator","Array","isArray","Component","componentProps","renderField","push","interceptors","filter","child","CustomItems","map","interceptor","index","customs","React","cloneElement","batchKeyGraph","graph","batchIndex","batch","args","allInterceptorKeys","concat","formItems","indexOf","Item","batchKey","submitProps","e","SubMenu","Sider","onSelect","item","keyPath","selectedKeys","domEvent","log","datas","this","style","height","width","textAlign","defaultSelectedKeys","defaultOpenKeys","mode","title","ItemGroup","label","menus","m","name","SyntaxHighlighter","registerLanguage","jsx","language","showLineNumbers","prism","code","layout","prefix","type","color","placeholder","rules","required","message","Example","state","username","password","saveFormRef","formRef","handleSubmit","preventDefault","validateFields","err","values","setState","wrappedComponentRef","htmlType","onClick","Option","handleSelectChange","setFieldsValue","note","labelCol","span","wrapperCol","onChange","offset","PriceInput","handleNumberChange","number","parseInt","target","isNaN","triggerChange","handleCurrencyChange","currency","changedValue","size","marginRight","checkPrice","rule","callback","initialValue","validator","formLayout","formItemLayout","buttonItemLayout","Group","Button","className","styles","valuePropName","remember","href","CollectionCreateForm","visible","onCancel","onCreate","okText","onOk","showModal","handleCancel","handleCreate","resetFields","AutoCompleteOption","residences","xs","sm","tailFormItemLayout","confirmDirty","autoCompleteResult","phone","handleWebsiteChange","domain","compareToFirstPassword","getFieldValue","validateToNextPassword","force","handleConfirmBlur","getWebsiteOptions","website","phoneSettings","Password","hasFeedback","onBlur","whitespace","options","dataSource","captcha","extra","gutter","addonBefore","expand","handleReset","handleSearch","toggle","idx","_","fieldMap","marginLeft","fontSize","MonthPicker","RangePicker","fieldsValue","rangeValue","rangeTimeValue","format","config","rangeConfig","showTime","BasicExample","source","LoginExample","RegisterExample","SearchExample","ModalExample","TimeExample","CustomExample","CascadeExample","LayoutExample","DynamicRuleExample","ComponentMap","category","Header","Content","Main","selectedKey","background","rel","padding","ReactDOM","document","getElementById","formTailLayout","checkNick","info","__","setTimeout","allowClear","option"],"mappings":"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","file":"static/js/main.334c03db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form\":\"src-components-form-example-login-module__login-form--3YIF9\",\"login-form-forgot\":\"src-components-form-example-login-module__login-form-forgot--1gXoq\",\"login-form-button\":\"src-components-form-example-login-module__login-form-button--3DEIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-advanced-search-form\":\"src-components-form-example-search-module__ant-advanced-search-form--2MUM_\",\"search-result-list\":\"src-components-form-example-search-module__search-result-list--3PcGO\"};","import React, { forwardRef, useImperativeHandle } from 'react';\nimport { Form } from 'antd';\n\nconst ComponentName = 'DynamicForm';\nconst renderField = (field, parentProps) => {\n  const { getFieldDecorator } = parentProps.form;\n  const { key, component, decorator } = field;\n  const [Component, componentProps] = Array.isArray(component) ? component : [component];\n  const { children } = componentProps || {};\n  return getFieldDecorator(key, decorator)(<Component {...componentProps}>{children}</Component>);\n}\n\nexport default Form.create({\n  onFieldsChange(props, changedFields, allFields) {\n    props.onFieldsChange && props.onFieldsChange(changedFields, allFields, props.form);\n  },\n  mapPropsToFields(props) {\n    const { settings: { fields } } = props;\n    const formData = props.fields;\n    if (!formData || !fields) {\n      return;\n    }\n    const allKeys = fields.reduce((allKey, field)=> {\n      allKey[field.key] = true;\n      return allKey;\n    }, {});\n    return Object.keys(formData).reduce((formFields, key)=>{\n      if(key in allKeys){\n        const fieldData = formData[key];\n        formFields[key] = Form.createFormField({\n          ...fieldData,\n          value: fieldData && fieldData.value,\n        });\n      }\n      return formFields;\n    }, {});\n  },\n  onValuesChange(props, changedValues, allValues) {\n    props.onValuesChange && props.onValuesChange(changedValues, allValues, props.form);\n  },\n})(forwardRef((props, ref) => {\n\n  useImperativeHandle(ref, () => ({\n    form: props.form,\n  }));\n\n  const { settings: { props: fromProps, fields }, render, children, onSubmit, onFieldsChange, fields: formData } = props;\n\n  if (!fields || !fields.length) {\n    return null;\n  }\n\n  if(onFieldsChange && !formData){\n    console.error(`Missing prop 'fields' when 'onFieldsChange' exists in <${ComponentName} onFieldsChange={() => {}} fields={}/>`)\n  }\n  const keyArgs = {};\n  const FieldInstances = {};\n  const batchKeys = {};\n  let currentBatchNumber = -1;\n  const FormFieldsGetter = {};\n  const totalKey = {};\n\n  Object.defineProperty(FormFieldsGetter, 'undefined', {\n    get: function () {\n      console.error(`Key not match in render params: <${ComponentName} render={[({key}, fields) => Component ]} />`)\n      return null;\n    }\n  });\n\n  const FieldMap = {};\n  fields.forEach(field => {\n    if (field.hidden) {\n      return;\n    }\n    const key = field.key;\n    if (key in totalKey) {\n      console.error(`Duplicate Key '${key}' props settings, <${ComponentName} settings={settings} />`)\n      return;\n    }\n    FieldMap[key] = field;\n    totalKey[key] = true;\n    FieldInstances[key] = renderField(field, props);\n    keyArgs[key] = key;\n    Object.defineProperty(FormFieldsGetter, key, {\n      get: function () {\n        if (!batchKeys[currentBatchNumber]) {\n          batchKeys[currentBatchNumber] = [];\n        }\n        batchKeys[currentBatchNumber].push(key);\n        return FieldInstances[key];\n      }\n    });\n  });\n\n  const interceptors = (Array.isArray(render) ? render : [render]).filter(child => typeof child === 'function');\n  const CustomItems = interceptors && interceptors.length ? interceptors.map((interceptor, index) => {\n    currentBatchNumber = index;\n    const customs = interceptor(keyArgs, FormFieldsGetter, props, FieldMap);\n    if (!customs) {\n      console.error(`Should return Component: <${ComponentName} render={[({key}, fields) => Component]} />`);\n      return null;\n    }\n    return React.cloneElement(customs, { key: `batch_${index}` });\n  }) : null;\n\n  const batchKeyGraph = Object.keys(batchKeys).reduce((graph, batchIndex) => {\n    const batch = batchKeys[batchIndex];\n    if (!graph[batch[0]]) {\n      graph[batch[0]] = [];\n    }\n    graph[batch[0]].push({ index: batchIndex, args: batch });\n    return graph;\n  }, {});\n\n  const allInterceptorKeys = Object.keys(batchKeys).reduce((allKeys, index) => {\n    return allKeys.concat(batchKeys[index]);\n  }, []);\n\n  const formItems = fields.map((field) => {\n    const { key, props } = field;\n    if (!totalKey[key]) {\n      return null;\n    }\n    if (allInterceptorKeys.indexOf(key) === -1) {\n      return <Form.Item {...props} key={key}>{FieldInstances[key]}</Form.Item>;\n    }\n    if ((key in batchKeyGraph)) {\n      return batchKeyGraph[key].map(batch => {\n        batch.args.forEach(batchKey => {\n          totalKey[batchKey] = false;\n        });\n        return CustomItems[batch.index];\n      });\n    }\n  });\n  const submitProps = {};\n  if(onSubmit){\n    submitProps.onSubmit = (e) => onSubmit(e, props.form);\n  }\n  return <Form {...fromProps} {...submitProps}>{formItems}{children}</Form>;\n}));","import React from 'react';\nimport { Menu } from 'antd';\n\nconst { SubMenu } = Menu;\n\nexport default class Sider extends React.Component {\n  onSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\n    console.log('click ', { item, key, keyPath, selectedKeys, domEvent });\n    this.props.onSelect && this.props.onSelect(key);\n  };\n\n  render() {\n    const {datas} = this.props;\n\n    return (\n      <Menu\n        onSelect={this.onSelect}\n        style={{ height:'100%', width: '100%', textAlign:'left' }}\n        defaultSelectedKeys={['README']}\n        defaultOpenKeys={['sub1']}\n        mode=\"inline\"\n        // theme=\"dark\"\n      >\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <span>rc-dynamic-form</span>\n            </span>\n          }\n        >\n          {\n            datas.map(item => <Menu.ItemGroup key={item.label} title={item.label}>\n              {\n                item.menus.map(m => <Menu.Item key={m.label}>{m.name}&nbsp;{m.label}</Menu.Item>)\n              }\n            </Menu.ItemGroup>)\n          }\n        </SubMenu>\n      </Menu>\n    );\n  }\n}","import React from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\nimport prism from 'react-syntax-highlighter/dist/esm/styles/prism/prism';\n \nSyntaxHighlighter.registerLanguage('jsx', jsx);\n\nexport default (props) => {\n  return (\n    <SyntaxHighlighter \n    language={props.language || 'jsx'}\n    // useInlineStyles={false}\n     showLineNumbers={props.language==='jsx' || !props.language} style={prism}>\n      {props.code}\n    </SyntaxHighlighter>\n  );\n};","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Icon, Input, Form, Button } from 'antd';\n\nconst settings = {\n  props: {\n    layout: \"inline\"\n  },\n  fields: [\n    {\n      key: 'username',\n      component: [Input, {\n        prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n        placeholder: \"Username\"\n      }],\n      props: {\n      },\n      decorator: {\n        rules: [{ required: true, message: 'Please input your Password!' }],\n      },\n    }, {\n      key: 'password',\n      component: [Input, {\n        type: \"password\",\n        prefix: <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n        placeholder: \"Password\"\n      }],\n      decorator: {\n        rules: [{ required: true, message: 'Please input your username!' }],\n      },\n    }\n  ]\n};\n\nexport default class Example extends React.Component {\n\n  state = {\n    fields: {\n      username: {\n        // value: 'benjycui',\n      },\n      password: {\n        // value: 'password',\n      },\n    },\n  };\n\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    // this.formRef.form.validateFields();\n    console.log(this.formRef)\n  }\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.formRef.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  onFieldsChange = (changedFields, allFields) => {\n    console.log(changedFields, allFields);\n    this.setState(({ fields }) => ({\n      fields: { ...fields, ...changedFields },\n    }));\n  }\n\n  onValuesChange = (changedValues, allValues) => {\n    console.log(changedValues, allValues);\n  }\n\n  render() {\n    // const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.formRef.form;\n    const { fields } = this.state;\n\n    // Only show error after a field is touched.\n    // const usernameError = isFieldTouched('username') && getFieldError('username');\n    // const passwordError = isFieldTouched('password') && getFieldError('password');\n\n    // console.log(getFieldsError());\n    return (\n      <DynamicForm\n        wrappedComponentRef={this.saveFormRef}\n        settings={settings}\n        fields={fields}\n        onValuesChange={this.onValuesChange}\n        onFieldsChange={this.onFieldsChange}>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit}\n          // disabled={hasErrors(getFieldsError())}\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </DynamicForm>\n    );\n  }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Form, Select, Button } from 'antd';\n\nconst { Option } = Select;\n\nexport default class Example extends React.Component {\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSelectChange = value => {\n        console.log(value);\n        this.formRef.form.setFieldsValue({\n            note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\n        });\n    };\n\n    render() {\n        const settings = {\n            props: {\n                labelCol: { span: 5 },\n                wrapperCol: { span: 12 }\n            },\n            fields: [\n                {\n                    key: 'note',\n                    component: Input,\n                    props: {\n                        label: 'Note',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input your note!' }],\n                    }\n                }, {\n                    key: 'gender',\n                    component: [Select, {\n                        placeholder: \"Select a option and change input text above\",\n                        onChange: this.handleSelectChange,\n                        children: [\n                            <Option value=\"male\" key=\"male\">male</Option>,\n                            <Option value=\"female\" key=\"female\">female</Option>\n                        ]\n                    }],\n                    props: {\n                        label: 'Gender',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please select your gender!' }],\n                    }\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                wrappedComponentRef={this.saveFormRef}\n                onSubmit={this.handleSubmit}>\n                <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Form, Input, Select, Button } from 'antd';\n\nconst { Option } = Select;\n\nclass PriceInput extends React.Component {\n    handleNumberChange = e => {\n        const number = parseInt(e.target.value || 0, 10);\n        if (isNaN(number)) {\n            return;\n        }\n        this.triggerChange({ number });\n    };\n\n    handleCurrencyChange = currency => {\n        this.triggerChange({ currency });\n    };\n\n    triggerChange = changedValue => {\n        const { onChange, value } = this.props;\n        if (onChange) {\n            onChange({\n                ...value,\n                ...changedValue,\n            });\n        }\n    };\n\n    render() {\n        const { size, value } = this.props;\n        return (\n            <span>\n                <Input\n                    type=\"text\"\n                    size={size}\n                    value={value.number}\n                    onChange={this.handleNumberChange}\n                    style={{ width: '65%', marginRight: '3%' }}\n                />\n                <Select\n                    value={value.currency}\n                    size={size}\n                    style={{ width: '32%' }}\n                    onChange={this.handleCurrencyChange}\n                >\n                    <Option value=\"rmb\">RMB</Option>\n                    <Option value=\"dollar\">Dollar</Option>\n                </Select>\n            </span>\n        );\n    }\n}\n\nexport default class Example extends React.Component {\n\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    checkPrice = (rule, value, callback) => {\n        if (value.number > 0) {\n            return callback();\n        }\n        callback('Price must greater than zero!');\n    };\n\n\n    render() {\n        const settings = {\n            props: {\n                layout: \"inline\"\n            },\n            fields: [\n                {\n                    key: 'price',\n                    component: PriceInput,\n                    decorator: {\n                        initialValue: { number: 0, currency: 'rmb' },\n                        rules: [{ validator: this.checkPrice }],\n                    },\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                onSubmit={this.handleSubmit}\n            >\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Radio, Input, Form, Button } from 'antd';\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            layout: {\n                value: 'horizontal',\n            },\n        },\n    };\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    render() {\n        const { fields } = this.state;\n        const formLayout = fields.layout.value;\n        const formItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                    labelCol: { span: 4 },\n                    wrapperCol: { span: 14 },\n                }\n                : null;\n        const buttonItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                    wrapperCol: { span: 14, offset: 4 },\n                }\n                : null;\n        const settings = {\n            props: {\n                layout: formLayout\n            },\n            fields: [\n                {\n                    key: 'layout',\n                    component: [Radio.Group, {\n                        children: [\n                            <Radio.Button value=\"horizontal\">Horizontal</Radio.Button>,\n                            <Radio.Button value=\"vertical\">Vertical</Radio.Button>,\n                            <Radio.Button value=\"inline\">Inline</Radio.Button>\n                        ]\n                    }],\n                    props: {\n                        label: 'Form Layout',\n                        ...formItemLayout\n                    },\n                }, {\n                    key: 'field-a',\n                    component: [Input, {\n                        placeholder: \"input placeholder a\"\n                    }],\n                    props: {\n                        label: 'Field A',\n                        ...formItemLayout\n                    },\n                }, {\n                    key: 'field-b',\n                    component: [Input, {\n                        placeholder: \"input placeholder b\"\n                    }],\n                    props: {\n                        label: 'Field B',\n                        ...formItemLayout\n                    },\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                fields={fields}\n                settings={settings}\n                onFieldsChange={this.onFieldsChange}\n                onSubmit={this.handleSubmit}>\n                <Form.Item {...buttonItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Icon, Input, Form, Button, Checkbox } from 'antd';\nimport styles from './login.module.less';\n\nconst settings = {\n    props: {\n        // layout: \"inline\",\n        className: styles[\"login-form\"]\n    },\n    fields: [\n        {\n            key: 'username',\n            component: [Input, {\n                prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                placeholder: \"Username\"\n            }],\n            props: {\n            },\n            decorator: {\n                rules: [{ required: true, message: 'Please input your username!' }],\n            },\n        }, {\n            key: 'password',\n            component: [Input, {\n                type: \"password\",\n                prefix: <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                placeholder: \"Password\"\n            }],\n            decorator: {\n                rules: [{ required: true, message: 'Please input your Password!' }],\n            },\n        }, {\n            key: 'remember',\n            component: [Checkbox, {\n                children: 'Remember me'\n            }],\n            decorator: {\n                valuePropName: 'checked',\n                initialValue: true,\n            },\n        }\n    ]\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            username: {\n                value: '1111'\n            }\n        }\n    };\n\n    componentDidMount() {\n        console.log(this.formRef)\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.formRef.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        return (\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSubmit}\n                onValuesChange={this.onValuesChange}\n                onFieldsChange={this.onFieldsChange}\n                render={[({ remember }, fields) => <Form.Item>\n                    {fields[remember]}\n                    <a className={styles['login-form-forgot']} href=\"\">Forgot password</a>\n                </Form.Item>]}>\n                <Button type=\"primary\" htmlType=\"submit\" className={styles['login-form-button']}>\n                    Log in\n                </Button>\n                <Form.Item>\n                    Or <a href=\"\">register now!</a>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Radio, Button, Modal } from 'antd';\n\nclass CollectionCreateForm extends React.Component {\n\n    render() {\n        const { visible, onCancel, onCreate, wrappedComponentRef } = this.props;\n        const settings = {\n            props: {\n                layout: \"vertical\",\n            },\n            fields: [{\n                key: 'title',\n                component: Input,\n                props: {\n                    label: `Title`\n                },\n                decorator: {\n                    rules: [{ required: true, message: 'Please input the title of collection!' }],\n                },\n            }, {\n                key: 'description',\n                component: [Input, {\n                    type: \"textarea\"\n                }],\n                props: {\n                    label: `Description`\n                },\n            }, {\n                key: 'modifier',\n                component: [Radio.Group, {\n                    type: \"textarea\",\n                    children: [<Radio key={'public'} value=\"public\">Public</Radio>,\n                    <Radio key={'private'} value=\"private\">Private</Radio>]\n                }],\n            }]\n        };\n\n        return (\n            <Modal\n                visible={visible}\n                title=\"Create a new collection\"\n                okText=\"Create\"\n                onCancel={onCancel}\n                onOk={onCreate}\n            >\n                <DynamicForm\n                    wrappedComponentRef={wrappedComponentRef}\n                    settings={settings} />\n            </Modal>\n        );\n    }\n}\n\nexport default class Example extends React.Component {\n\n    state = {\n        visible: false,\n    };\n\n    showModal = () => {\n        this.setState({ visible: true });\n    };\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n\n    handleCreate = () => {\n        const { form } = this.formRef;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            console.log('Received values of form: ', values);\n            form.resetFields();\n            this.setState({ visible: false });\n        });\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    render() {\n        return <div>\n            <Button type=\"primary\" onClick={this.showModal}>\n                New Collection\n            </Button>\n            <CollectionCreateForm\n                wrappedComponentRef={this.saveFormRef}\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                onCreate={this.handleCreate}\n            />\n        </div>\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    AutoComplete,\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst residences = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        children: [\n            {\n                value: 'hangzhou',\n                label: 'Hangzhou',\n                children: [\n                    {\n                        value: 'xihu',\n                        label: 'West Lake',\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        children: [\n            {\n                value: 'nanjing',\n                label: 'Nanjing',\n                children: [\n                    {\n                        value: 'zhonghuamen',\n                        label: 'Zhong Hua Men',\n                    },\n                ],\n            },\n        ],\n    },\n];\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n        fields: {\n            prefix: {\n                value: '86'\n            },\n            phone: {\n                value: '',\n            }\n        }\n    };\n\n    handleWebsiteChange = value => {\n        let autoCompleteResult;\n        if (!value) {\n            autoCompleteResult = [];\n        } else {\n            autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n        }\n        this.setState({ autoCompleteResult });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        // debugger;\n        const { form } = this.formRef;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        // debugger;\n        const { form } = this.formRef;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    getWebsiteOptions = () => this.state.autoCompleteResult.map(website => (\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    componentDidMount() {\n        console.log(this.formRef)\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSubmit = (e, formRef) => {\n        e.preventDefault();\n        formRef.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        // debugger;\n        const phoneSettings = {\n            key: 'phone',\n            component: [Input, {\n                style: { width: '100%' }\n            }],\n            props: {\n                label: 'Phone Number',\n            },\n            decorator: {\n                initialValue: fields.phone.value,\n                rules: [{ required: true, message: 'Please input your phone number!' }],\n            },\n        };\n\n        const settings = {\n            props: {\n                ...formItemLayout,\n            },\n            fields: [\n                {\n                    key: 'email',\n                    component: [Input, {\n                        prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                        placeholder: \"Username\"\n                    }],\n                    hidden: true,\n                    props: {\n                        label: 'E-mail',\n                    },\n                    decorator: {\n                        rules: [\n                            { type: 'email', message: 'The input is not valid E-mail!' },\n                            { required: true, message: 'Please input your E-mail!' },\n                        ],\n                    },\n                }, {\n                    key: 'password',\n                    component: Input.Password,\n                    props: {\n                        label: 'Password',\n                        hasFeedback: true,\n                    },\n                    decorator: {\n                        rules: [\n                            { required: true, message: 'Please input your password!' },\n                            { validator: this.validateToNextPassword },\n                        ],\n                    },\n                }, {\n                    key: 'confirm',\n                    component: [Input.Password, {\n                        onBlur: this.handleConfirmBlur\n                    }],\n                    props: {\n                        label: 'Confirm Password',\n                        hasFeedback: true,\n                    },\n                    decorator: {\n                        rules: [\n                            { required: true, message: 'Please confirm your password!' },\n                            { validator: this.compareToFirstPassword },\n                        ],\n                    },\n                }, {\n                    key: 'nickname',\n                    component: Input,\n                    props: {\n                        label: <span>Nickname&nbsp;\n                            <Tooltip title=\"What do you want others to call you?\">\n                                <Icon type=\"question-circle-o\" />\n                            </Tooltip>\n                        </span>,\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n                    },\n                }, {\n                    key: 'residence',\n                    component: [Cascader, {\n                        options: residences\n                    }],\n                    props: {\n                        label: 'Habitual Residence',\n                    },\n                    decorator: {\n                        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                        rules: [\n                            { type: 'array', required: true, message: 'Please select your habitual residence!' },\n                        ],\n                    },\n                }, {\n                    key: 'prefix',\n                    component: [Select, {\n                        style: { width: 70 },\n                        children: [\n                            <Option key=\"86\" value=\"86\">+86</Option>,\n                            <Option key=\"87\" value=\"87\">+87</Option>\n                        ],\n                    }],\n                    decorator: {\n                        initialValue: \"86\"\n                    },\n                }, {\n                    key: 'website',\n                    component: [AutoComplete, {\n                        dataSource: this.getWebsiteOptions(),\n                        onChange: this.handleWebsiteChange,\n                        placeholder: \"website\"\n                    }],\n                    props: {\n                        label: 'Website'\n                    },\n                    decorator: {\n                        initialValue: \"86\"\n                    },\n                }, {\n                    key: 'captcha',\n                    component: [Input, {\n                    }],\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input the captcha you got!' }],\n                    },\n                }, {\n                    key: 'agreement',\n                    component: [Checkbox, {\n                        children: <>\n                            I have read the <a href=\"\">agreement</a>\n                        </>\n                    }],\n                    props: {\n                        ...tailFormItemLayout,\n                    },\n                    decorator: {\n                        valuePropName: 'checked'\n                    },\n                }\n            ]\n        };\n        return (\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSubmit}\n                onFieldsChange={this.onFieldsChange}\n                render={[\n                    ({ captcha }, fields) => <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n                        <Row gutter={8}>\n                            <Col span={12}>\n                                {fields[captcha]}\n                            </Col>\n                            <Col span={12}>\n                                <Button>Get captcha</Button>\n                            </Col>\n                        </Row>\n                    </Form.Item>,\n                    ({ prefix }, fields, ref) => <Form.Item {...phoneSettings.props}>\n                        {ref.form.getFieldDecorator(phoneSettings.key, phoneSettings.decorator)(<Input {...phoneSettings.component[1]} addonBefore={fields[prefix]} />)}\n                    </Form.Item>\n                ]}>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Row, Col, Icon, Input, Form, Button, Checkbox } from 'antd';\nimport styles from './search.module.less';\n\nexport default class Example extends React.Component {\n\n    state = {\n        expand: false,\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleReset = () => {\n        this.formRef.form.resetFields();\n    };\n\n    handleSearch = e => {\n        e.preventDefault();\n        this.formRef.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    toggle = () => {\n        const { expand } = this.state;\n        this.setState({ expand: !expand });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        const count = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        const settings = {\n            props: {\n                layout: 'horizontal',\n                className: styles[\"ant-advanced-search-form\"]\n            },\n            fields: count.map((idx) => ({\n                key: `field-${idx}`,\n                component: [Input, {\n                    placeholder: \"placeholder\"\n                }],\n                hidden: this.state.expand && idx > 5,\n                props: {\n                    label: `Field ${idx}`\n                },\n                decorator: {\n                    rules: [{ required: true, message: 'Input something!' }],\n                },\n            }))\n        };\n\n        return (<>\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSearch}\n                onValuesChange={this.onValuesChange}\n                onFieldsChange={this.onFieldsChange}\n                render={(keys, fields, _, fieldMap) => <Row gutter={24}>{\n                    Object.keys(keys).map((name) => <Col span={8} key={name}>\n                        <Form.Item {...fieldMap[name].props}>\n                            {fields[name]}\n                        </Form.Item>\n                    </Col>)\n                }</Row>}>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Search\n                        </Button>\n                        <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n                            Clear\n                        </Button>\n                        <a style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n                            Collapse <Icon type={this.state.expand ? 'down' : 'up'} />\n                        </a>\n                    </Col>\n                </Row>\n            </DynamicForm>\n            <div className={styles['search-result-list']}>Search Result List</div>\n        </>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Form, DatePicker, TimePicker, Button } from 'antd';\n\nconst { MonthPicker, RangePicker } = DatePicker;\n\nexport default class Example extends React.Component {\n\n    // state = {};\n\n    handleSubmit = (e, formRef) => {\n        e.preventDefault();\n        formRef.validateFields((err, fieldsValue) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n\n            console.log('Received values of form: ', fieldsValue);\n            // Should format date value before submit.\n            const rangeValue = fieldsValue['range-picker'];\n            const rangeTimeValue = fieldsValue['range-time-picker'];\n            const values = {\n                ...fieldsValue,\n                'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n                'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n                'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n                'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n                'range-time-picker': [\n                    rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\n                    rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\n                ],\n                'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\n            };\n            console.log('Received values of form: ', values);\n        });\n    };\n\n    // onFieldsChange = (changedFields, allFields) => {\n    //     console.log(changedFields, allFields);\n    //     this.setState(({ fields }) => ({\n    //         fields: { ...fields, ...changedFields },\n    //     }));\n    // }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n        const config = {\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n        };\n        const rangeConfig = {\n            rules: [{ type: 'array', required: true, message: 'Please select time!' }],\n        };\n\n        const settings = {\n            props: {\n                ...formItemLayout\n            },\n            fields: [{\n                key: 'date-picker',\n                component: DatePicker,\n                props: {\n                    label: 'DatePicker'\n                },\n                decorator: config,\n            },{\n                key: 'date-time-picker',\n                component: [DatePicker, {\n                    showTime: true,\n                    format: \"YYYY-MM-DD HH:mm:ss\"\n                }],\n                props: {\n                    label: 'DatePicker[showTime]'\n                },\n                decorator: config,\n            },{\n                key: 'month-picker',\n                component: MonthPicker,\n                props: {\n                    label: 'MonthPicker'\n                },\n                decorator: config,\n            },{\n                key: 'range-picker',\n                component: RangePicker,\n                props: {\n                    label: 'RangePicker'\n                },\n                decorator: rangeConfig,\n            },{\n                key: 'range-time-picker',\n                component: [RangePicker, {\n                    showTime: true,\n                    format: \"YYYY-MM-DD HH:mm:ss\"\n                }],\n                props: {\n                    label: 'RangePicker[showTime]'\n                },\n                decorator: rangeConfig,\n            },{\n                key: 'time-picker',\n                component: TimePicker,\n                props: {\n                    label: 'TimePicker'\n                },\n                decorator: config,\n            }]\n        };\n\n        // const { fields } = this.state;\n        return (<>\n            <DynamicForm\n                settings={settings}\n                onSubmit={this.handleSubmit}\n                // fields={fields}\n                // onFieldsChange={this.onFieldsChange}\n                >\n                <Form.Item wrapperCol={{\n                    xs: { span: 24, offset: 0 },\n                    sm: { span: 16, offset: 8 },\n                }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        </>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport ExampleList from './components/example-list';\nimport CodeView from './components/codeview.jsx';\nimport { Menu, Icon, Layout } from 'antd';\nimport codegen from 'babel-plugin-codegen/macro'\n\nimport BasicExample from './components/form/example/basic';\nimport CascadeExample from './components/form/example/cascade';\nimport CustomExample from './components/form/example/custom';\nimport DynamicRuleExample from './components/form/example/dynamicRule';\nimport LayoutExample from './components/form/example/layout';\nimport LoginExample from './components/form/example/login';\nimport ModalExample from './components/form/example/modal';\nimport RegisterExample from './components/form/example/register';\nimport SearchExample from './components/form/example/search';\nimport TimeExample from './components/form/example/time';\n\nimport Markdown from 'react-markdown';\n\nconst datas = [\n//   {\n//   label: '文档',\n//   menus: [{\n//     label: 'README',\n//     language: 'markdown',\n//     source: codegen.require('./transform/readPath', 'README.md')\n//   }],\n// }, \n{\n  label: '通用',\n  menus: [{\n    label: '内联登录栏',\n    Component: BasicExample,\n    source: codegen.require('./transform/readFileSync', 'basic')\n  },\n  {\n    label: '登录框',\n    Component: LoginExample,\n    source: codegen.require('./transform/readFileSync', 'login')\n  },\n  {\n    label: '注册新用户',\n    Component: RegisterExample,\n    source: codegen.require('./transform/readFileSync', 'register')\n  },\n  {\n    label: '高级搜索',\n    Component: SearchExample,\n    source: codegen.require('./transform/readFileSync', 'search')\n  },\n  {\n    label: '弹出层中表单',\n    Component: ModalExample,\n    source: codegen.require('./transform/readFileSync', 'modal')\n  },\n  {\n    label: '时间类控件',\n    Component: TimeExample,\n    source: codegen.require('./transform/readFileSync', 'time')\n  },\n  {\n    label: '自定义表单控件',\n    Component: CustomExample,\n    source: codegen.require('./transform/readFileSync', 'custom')\n  },\n  {\n    label: '表单联动',\n    Component: CascadeExample,\n    source: codegen.require('./transform/readFileSync', 'cascade')\n  },\n  {\n    label: '表单布局',\n    Component: LayoutExample,\n    source: codegen.require('./transform/readFileSync', 'layout')\n  },\n  {\n    label: '动态校验规则',\n    Component: DynamicRuleExample,\n    source: codegen.require('./transform/readFileSync', 'dynamicRule')\n  }]\n}\n// , {\n//   label: '自定义渲染',\n//   menus: [{\n//     label: '表单'\n//   }]\n// }\n];\n\nconst ComponentMap = datas.reduce((map, category) => {\n  category.menus.forEach(m => {\n    map[m.label] = m;\n    ;\n  });\n  return map;\n}, {});\n\nconst { Header, Content, Sider } = Layout;\n\nexport default class Main extends React.Component {\n\n  state = {\n    selectedKey: '内联登录栏'\n  }\n  onSelect = (selectedKey) => {\n    this.setState({\n      selectedKey\n    })\n  }\n  render() {\n\n    const { selectedKey } = this.state;\n    const {source, language, Component} = ComponentMap[selectedKey];\n\n    console.log(source);\n    \n    return (\n      <Layout style={{ height: '100vh', background: '#fff' }}>\n        <Header style={{ background: '#fff', height: '48px' }}>\n          <Menu mode=\"horizontal\">\n            <Menu.Item key=\"alipay\">\n              <a href=\"https://www.npmjs.com/package/rc-form-dynamic\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Icon type=\"github\" />\n                Github\n              </a>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Layout >\n          <Sider><ExampleList datas={datas} onSelect={this.onSelect} /></Sider>\n          {\n            source ? <Content className=\"elements-container\" style={{ width: '60%', background: '#fff' }}>{\n              selectedKey==='README'? <Markdown source={source} /> : <CodeView code={source} language={language} />\n            }</Content>: null\n          }\n          \n          {\n            Component ? <Layout style={{ width: '40%', padding: '1em 2em', background: '#FFF' }}>\n            <Content style={{ background: '#fff' }} ><Component /></Content>\n          </Layout> : null\n          }\n          \n        </Layout>\n      </Layout>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Example from './Example';\n\nReactDOM.render(<Example />, document.getElementById('root'));\n","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Form, Button, Checkbox, Select } from 'antd';\n\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 8 },\n};\nconst formTailLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 8, offset: 4 },\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            checkNick: {\n                value: true,\n            }\n        }\n    };\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.info('success', values);\n            }else{\n                console.error(err);\n            }\n        });\n    };\n    \n    onValuesChange=(_, __, form) => {\n        setTimeout(()=>{\n            form.validateFields(['nickname'], {force: true});\n        });\n    }\n    \n    onFieldsChange = (changedFields) => {\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n    \n    render() {\n        const { fields } = this.state;\n        const options = fields.checkNick.value ? ['male', 'female'] : ['male', 'female', 'others']\n        const settings = {\n            fields: [\n                {\n                    key: 'username',\n                    component: [Input, {\n                        placeholder: 'Please input your name',\n                    }],\n                    props: {\n                        label: \"Name\",\n                        ...formItemLayout,\n                    },\n                    decorator: {\n                        rules: [\n                            {\n                                required: true,\n                                message: 'Please input your name',\n                            },\n                        ],\n                    }\n                }, {\n                    key: 'nickname',\n                    component: [Input, {\n                        placeholder: 'Please input your nickname',\n                    }],\n                    props: {\n                        label: \"Nickname\",\n                        ...formItemLayout,\n                    },\n                    decorator: {\n                        rules: [\n                            {\n                                required: fields.checkNick.value,\n                                message: 'Please input your nickname',\n                            },\n                        ],\n                    }\n                }, {\n                    key: 'checkNick',\n                    component: [Checkbox, {\n                        children: 'Nickname is required',\n                    }],\n                    props: {\n                        ...formTailLayout\n                    },\n                    decorator: {\n                        valuePropName: 'checked',\n                    }\n                }, {\n                    key: 'gender',\n                    component: [Select, {\n                        allowClear: true,\n                        placeholder: \"Select a option and change input text above\",\n                        onChange: this.handleSelectChange,\n                        children: options.map(option => <Option key={option} value={option} >{option}</Option>)\n                    }],\n                    props: {\n                        ...formItemLayout,\n                        label: 'Gender',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please select your gender!' }],\n                    }\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                fields={fields}\n                onFieldsChange={this.onFieldsChange}\n                onValuesChange={this.onValuesChange}\n                onSubmit={this.handleSubmit}>\n                <Form.Item {...formTailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Check\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}"],"sourceRoot":""}