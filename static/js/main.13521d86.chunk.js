(this["webpackJsonprc-form-dynamic"]=this["webpackJsonprc-form-dynamic"]||[]).push([[1],{142:function(e,n,t){e.exports={"login-form":"src-components-form-example-login-module__login-form--3YIF9","login-form-forgot":"src-components-form-example-login-module__login-form-forgot--1gXoq","login-form-button":"src-components-form-example-login-module__login-form-button--3DEIp"}},144:function(e,n,t){},178:function(e,n,t){e.exports={"ant-advanced-search-form":"src-components-form-example-search-module__ant-advanced-search-form--2MUM_","search-result-list":"src-components-form-example-search-module__search-result-list--3PcGO"}},234:function(e,n,t){e.exports=t(522)},26:function(e,n,t){"use strict";var a=t(22),o=(t(41),t(13)),r=t(135),l=t(0),s=t.n(l);n.a=o.a.create({onFieldsChange:function(e,n,t){e.onFieldsChange&&e.onFieldsChange(n,t,e.form)},mapPropsToFields:function(e){var n=e.settings.fields,t=e.fields;if(t&&n){var r=n.reduce((function(e,n){return e[n.key]=!0,e}),{});return Object.keys(t).reduce((function(e,n){if(n in r){var l=t[n];e[n]=o.a.createFormField(Object(a.a)({},l,{value:l&&l.value}))}return e}),{})}},onValuesChange:function(e,n,t){e.onValuesChange&&e.onValuesChange(n,t,e.form)}})(Object(l.forwardRef)((function(e,n){Object(l.useImperativeHandle)(n,(function(){return{form:e.form}}));var t=e.settings,a=t.props,i=t.fields,c=e.render,m=e.children,u=e.onSubmit,p=e.onFieldsChange,d=e.fields;if(!i||!i.length)return null;p&&!d&&console.error("Missing prop 'fields' when 'onFieldsChange' exists in <".concat("DynamicForm"," onFieldsChange={() => {}} fields={}/>"));var f={},h={},g={},y=-1,b={},v={};Object.defineProperty(b,"undefined",{get:function(){return console.error("Key not match in render params: <".concat("DynamicForm"," render={[({key}, fields) => Component ]} />")),null}});var C={};i.forEach((function(n){if(!n.hidden){var t=n.key;t in v?console.error("Duplicate Key '".concat(t,"' props settings, <").concat("DynamicForm"," settings={settings} />")):(C[t]=n,v[t]=!0,h[t]=function(e,n){var t=n.form.getFieldDecorator,a=e.key,o=e.component,l=e.decorator,i=Array.isArray(o)?o:[o],c=Object(r.a)(i,2),m=c[0],u=c[1],p=(u||{}).children;return t(a,l)(s.a.createElement(m,u,p))}(n,e),f[t]=t,Object.defineProperty(b,t,{get:function(){return g[y]||(g[y]=[]),g[y].push(t),h[t]}}))}}));var k=(Array.isArray(c)?c:[c]).filter((function(e){return"function"===typeof e})),F=k&&k.length?k.map((function(n,t){y=t;var a=n(f,b,e,C);return a?s.a.cloneElement(a,{key:"batch_".concat(t)}):(console.error("Should return Component: <".concat("DynamicForm"," render={[({key}, fields) => Component]} />")),null)})):null,R=Object.keys(g).reduce((function(e,n){var t=g[n];return e[t[0]]||(e[t[0]]=[]),e[t[0]].push({index:n,args:t}),e}),{}),w=Object.keys(g).reduce((function(e,n){return e.concat(g[n])}),[]),E=i.map((function(e){var n=e.key,t=e.props;return v[n]?-1===w.indexOf(n)?s.a.createElement(o.a.Item,Object.assign({},t,{key:n}),h[n]):n in R?R[n].map((function(e){return e.args.forEach((function(e){v[e]=!1})),F[e.index]})):void 0:null})),O={};return u&&(O.onSubmit=function(n){return u(n,e.form)}),s.a.createElement(o.a,Object.assign({},a,O),E,m)})))},522:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(7),l=t.n(r),s=(t(91),t(109),t(34)),i=(t(53),t(6)),c=t(14),m=t(15),u=t(17),p=t(16),d=t(18),f=(t(181),t(44)),h=(t(144),s.a.SubMenu),g=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).onSelect=function(e){var n=e.item,a=e.key,o=e.keyPath,r=e.selectedKeys,l=e.domEvent;console.log("click ",{item:n,key:a,keyPath:o,selectedKeys:r,domEvent:l}),t.props.onSelect&&t.props.onSelect(a)},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e=this.props.datas;return o.a.createElement(s.a,{onSelect:this.onSelect,style:{height:"100%",width:"100%",textAlign:"left"},defaultSelectedKeys:["README"],defaultOpenKeys:["sub1"],mode:"inline"},o.a.createElement(h,{key:"sub1",title:o.a.createElement("span",null,o.a.createElement("span",null,"rc-dynamic-form"))},e.map((function(e){return o.a.createElement(s.a.ItemGroup,{key:e.label,title:e.label},e.menus.map((function(e){return o.a.createElement(s.a.Item,{key:e.label},e.name,"\xa0",e.label)})))}))))}}]),n}(o.a.Component),y=t(526),b=t(219),v=t(221);y.a.registerLanguage("jsx",b.a);var C=function(e){return o.a.createElement(y.a,{language:e.language||"jsx",showLineNumbers:"jsx"===e.language||!e.language,style:v.a},e.code)},k=(t(41),t(13)),F=(t(33),t(3)),R=t(22),w=(t(35),t(20)),E=t(26),O={props:{layout:"inline"},fields:[{key:"username",component:[w.a,{prefix:o.a.createElement(i.a,{type:"user",style:{color:"rgba(0,0,0,.25)"}}),placeholder:"Username"}],props:{},decorator:{rules:[{required:!0,message:"Please input your Password!"}]}},{key:"password",component:[w.a,{type:"password",prefix:o.a.createElement(i.a,{type:"lock",style:{color:"rgba(0,0,0,.25)"}}),placeholder:"Password"}],decorator:{rules:[{required:!0,message:"Please input your username!"}]}}]},S=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).state={fields:{username:{},password:{}}},t.saveFormRef=function(e){t.formRef=e},t.handleSubmit=function(e){e.preventDefault(),t.formRef.form.validateFields((function(e,n){e||console.log("Received values of form: ",n)}))},t.onFieldsChange=function(e,n){console.log(e,n),t.setState((function(n){var t=n.fields;return{fields:Object(R.a)({},t,{},e)}}))},t.onValuesChange=function(e,n){console.log(e,n)},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"componentDidMount",value:function(){console.log(this.formRef)}},{key:"render",value:function(){var e=this.state.fields;return o.a.createElement(E.a,{wrappedComponentRef:this.saveFormRef,settings:O,fields:e,onValuesChange:this.onValuesChange,onFieldsChange:this.onFieldsChange},o.a.createElement(k.a.Item,null,o.a.createElement(F.a,{type:"primary",htmlType:"submit",onClick:this.handleSubmit},"Log in")))}}]),n}(o.a.Component),x=(t(82),t(31)),j=x.a.Option,D=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).handleSubmit=function(e,n){e.preventDefault(),n.validateFields((function(e,n){e||console.log("Received values of form: ",n)}))},t.saveFormRef=function(e){t.formRef=e},t.handleSelectChange=function(e){console.log(e),t.formRef.form.setFieldsValue({note:"Hi, ".concat("male"===e?"man":"lady","!")})},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e={props:{labelCol:{span:5},wrapperCol:{span:12}},fields:[{key:"note",component:w.a,props:{label:"Note"},decorator:{rules:[{required:!0,message:"Please input your note!"}]}},{key:"gender",component:[x.a,{placeholder:"Select a option and change input text above",onChange:this.handleSelectChange,children:[o.a.createElement(j,{value:"male",key:"male"},"male"),o.a.createElement(j,{value:"female",key:"female"},"female")]}],props:{label:"Gender"},decorator:{rules:[{required:!0,message:"Please select your gender!"}]}}]};return o.a.createElement(E.a,{settings:e,wrappedComponentRef:this.saveFormRef,onSubmit:this.handleSubmit},o.a.createElement(k.a.Item,{wrapperCol:{span:12,offset:5}},o.a.createElement(F.a,{type:"primary",htmlType:"submit"},"Log in")))}}]),n}(o.a.Component),P=x.a.Option,I=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).handleNumberChange=function(e){var n=parseInt(e.target.value||0,10);isNaN(n)||t.triggerChange({number:n})},t.handleCurrencyChange=function(e){t.triggerChange({currency:e})},t.triggerChange=function(e){var n=t.props,a=n.onChange,o=n.value;a&&a(Object(R.a)({},o,{},e))},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e=this.props,n=e.size,t=e.value;return o.a.createElement("span",null,o.a.createElement(w.a,{type:"text",size:n,value:t.number,onChange:this.handleNumberChange,style:{width:"65%",marginRight:"3%"}}),o.a.createElement(x.a,{value:t.currency,size:n,style:{width:"32%"},onChange:this.handleCurrencyChange},o.a.createElement(P,{value:"rmb"},"RMB"),o.a.createElement(P,{value:"dollar"},"Dollar")))}}]),n}(o.a.Component),V=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).handleSubmit=function(e,n){e.preventDefault(),n.validateFields((function(e,n){e||console.log("Received values of form: ",n)}))},t.checkPrice=function(e,n,t){if(n.number>0)return t();t("Price must greater than zero!")},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e={props:{layout:"inline"},fields:[{key:"price",component:I,decorator:{initialValue:{number:0,currency:"rmb"},rules:[{validator:this.checkPrice}]}}]};return o.a.createElement(E.a,{settings:e,onSubmit:this.handleSubmit},o.a.createElement(k.a.Item,null,o.a.createElement(F.a,{type:"primary",htmlType:"submit"},"Submit")))}}]),n}(o.a.Component),Y=t(99),M=(t(204),t(66)),T=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).state={fields:{layout:{value:"horizontal"}}},t.handleSubmit=function(e,n){e.preventDefault(),n.validateFields((function(e,n){e||console.log("Received values of form: ",n)}))},t.onFieldsChange=function(e,n){console.log(e,n),t.setState((function(n){var t=n.fields;return{fields:Object(R.a)({},t,{},e)}}))},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e=this.state.fields,n=e.layout.value,t="horizontal"===n?{labelCol:{span:4},wrapperCol:{span:14}}:null,a="horizontal"===n?{wrapperCol:{span:14,offset:4}}:null,r={props:{layout:n},fields:[{key:"layout",component:[M.a.Group,{children:[o.a.createElement(M.a.Button,{value:"horizontal"},"Horizontal"),o.a.createElement(M.a.Button,{value:"vertical"},"Vertical"),o.a.createElement(M.a.Button,{value:"inline"},"Inline")]}],props:Object(R.a)({label:"Form Layout"},t)},{key:"field-a",component:[w.a,{placeholder:"input placeholder a"}],props:Object(R.a)({label:"Field A"},t)},{key:"field-b",component:[w.a,{placeholder:"input placeholder b"}],props:Object(R.a)({label:"Field B"},t)}]};return o.a.createElement(E.a,{fields:e,settings:r,onFieldsChange:this.onFieldsChange,onSubmit:this.handleSubmit},o.a.createElement(k.a.Item,a,o.a.createElement(F.a,{type:"primary",htmlType:"submit"},"Log in")))}}]),n}(o.a.Component),B=(t(83),t(51)),N=t(142),q=t.n(N),L={props:{className:q.a["login-form"]},fields:[{key:"username",component:[w.a,{prefix:o.a.createElement(i.a,{type:"user",style:{color:"rgba(0,0,0,.25)"}}),placeholder:"Username"}],props:{},decorator:{rules:[{required:!0,message:"Please input your username!"}]}},{key:"password",component:[w.a,{type:"password",prefix:o.a.createElement(i.a,{type:"lock",style:{color:"rgba(0,0,0,.25)"}}),placeholder:"Password"}],decorator:{rules:[{required:!0,message:"Please input your Password!"}]}},{key:"remember",component:[B.a,{children:"Remember me"}],decorator:{valuePropName:"checked",initialValue:!0}}]},z=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).state={fields:{username:{value:"1111"}}},t.saveFormRef=function(e){t.formRef=e},t.handleSubmit=function(e){e.preventDefault(),t.formRef.form.validateFields((function(e,n){e||console.log("Received values of form: ",n)}))},t.onFieldsChange=function(e,n){console.log(e,n),t.setState((function(n){var t=n.fields;return{fields:Object(R.a)({},t,{},e)}}))},t.onValuesChange=function(e,n){console.log(e,n)},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"componentDidMount",value:function(){console.log(this.formRef)}},{key:"render",value:function(){var e=this.state.fields;return o.a.createElement(E.a,{wrappedComponentRef:this.saveFormRef,settings:L,fields:e,onSubmit:this.handleSubmit,onValuesChange:this.onValuesChange,onFieldsChange:this.onFieldsChange,render:[function(e,n){var t=e.remember;return o.a.createElement(k.a.Item,null,n[t],o.a.createElement("a",{className:q.a["login-form-forgot"],href:""},"Forgot password"))}]},o.a.createElement(F.a,{type:"primary",htmlType:"submit",className:q.a["login-form-button"]},"Log in"),o.a.createElement(k.a.Item,null,"Or ",o.a.createElement("a",{href:""},"register now!")))}}]),n}(o.a.Component),H=(t(420),t(230)),A=function(e){function n(){return Object(c.a)(this,n),Object(u.a)(this,Object(p.a)(n).apply(this,arguments))}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e=this.props,n=e.visible,t=e.onCancel,a=e.onCreate,r=e.wrappedComponentRef,l={props:{layout:"vertical"},fields:[{key:"title",component:w.a,props:{label:"Title"},decorator:{rules:[{required:!0,message:"Please input the title of collection!"}]}},{key:"description",component:[w.a,{type:"textarea"}],props:{label:"Description"}},{key:"modifier",component:[M.a.Group,{type:"textarea",children:[o.a.createElement(M.a,{key:"public",value:"public"},"Public"),o.a.createElement(M.a,{key:"private",value:"private"},"Private")]}]}]};return o.a.createElement(H.a,{visible:n,title:"Create a new collection",okText:"Create",onCancel:t,onOk:a},o.a.createElement(E.a,{wrappedComponentRef:r,settings:l}))}}]),n}(o.a.Component),_=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).state={visible:!1},t.showModal=function(){t.setState({visible:!0})},t.handleCancel=function(){t.setState({visible:!1})},t.handleCreate=function(){var e=t.formRef.form;e.validateFields((function(n,a){n||(console.log("Received values of form: ",a),e.resetFields(),t.setState({visible:!1}))}))},t.saveFormRef=function(e){t.formRef=e},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(F.a,{type:"primary",onClick:this.showModal},"New Collection"),o.a.createElement(A,{wrappedComponentRef:this.saveFormRef,visible:this.state.visible,onCancel:this.handleCancel,onCreate:this.handleCreate}))}}]),n}(o.a.Component),W=(t(205),t(104)),G=(t(206),t(90)),K=(t(422),t(231)),U=(t(143),t(76)),$=(t(424),t(180)),J=x.a.Option,Z=$.a.Option,X=[{value:"zhejiang",label:"Zhejiang",children:[{value:"hangzhou",label:"Hangzhou",children:[{value:"xihu",label:"West Lake"}]}]},{value:"jiangsu",label:"Jiangsu",children:[{value:"nanjing",label:"Nanjing",children:[{value:"zhonghuamen",label:"Zhong Hua Men"}]}]}],Q={labelCol:{xs:{span:24},sm:{span:8}},wrapperCol:{xs:{span:24},sm:{span:16}}},ee={wrapperCol:{xs:{span:24,offset:0},sm:{span:16,offset:8}}},ne=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,r=new Array(a),l=0;l<a;l++)r[l]=arguments[l];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(r)))).state={confirmDirty:!1,autoCompleteResult:[],fields:{prefix:{value:"86"},phone:{value:""}}},t.handleWebsiteChange=function(e){var n;n=e?[".com",".org",".net"].map((function(n){return"".concat(e).concat(n)})):[],t.setState({autoCompleteResult:n})},t.compareToFirstPassword=function(e,n,a){var o=t.formRef.form;n&&n!==o.getFieldValue("password")?a("Two passwords that you enter is inconsistent!"):a()},t.validateToNextPassword=function(e,n,a){var o=t.formRef.form;n&&t.state.confirmDirty&&o.validateFields(["confirm"],{force:!0}),a()},t.handleConfirmBlur=function(e){var n=e.target.value;t.setState({confirmDirty:t.state.confirmDirty||!!n})},t.getWebsiteOptions=function(){return t.state.autoCompleteResult.map((function(e){return o.a.createElement(Z,{key:e},e)}))},t.saveFormRef=function(e){t.formRef=e},t.handleSubmit=function(e,n){e.preventDefault(),n.validateFields((function(e,n){e||console.log("Received values of form: ",n)}))},t.onFieldsChange=function(e,n){console.log(e,n),t.setState((function(n){var t=n.fields;return{fields:Object(R.a)({},t,{},e)}}))},t.onValuesChange=function(e,n){console.log(e,n)},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"componentDidMount",value:function(){console.log(this.formRef)}},{key:"render",value:function(){var e=this.state.fields,n={key:"phone",component:[w.a,{style:{width:"100%"}}],props:{label:"Phone Number"},decorator:{initialValue:e.phone.value,rules:[{required:!0,message:"Please input your phone number!"}]}},t={props:Object(R.a)({},Q),fields:[{key:"email",component:[w.a,{prefix:o.a.createElement(i.a,{type:"user",style:{color:"rgba(0,0,0,.25)"}}),placeholder:"Username"}],hidden:!0,props:{label:"E-mail"},decorator:{rules:[{type:"email",message:"The input is not valid E-mail!"},{required:!0,message:"Please input your E-mail!"}]}},{key:"password",component:w.a.Password,props:{label:"Password",hasFeedback:!0},decorator:{rules:[{required:!0,message:"Please input your password!"},{validator:this.validateToNextPassword}]}},{key:"confirm",component:[w.a.Password,{onBlur:this.handleConfirmBlur}],props:{label:"Confirm Password",hasFeedback:!0},decorator:{rules:[{required:!0,message:"Please confirm your password!"},{validator:this.compareToFirstPassword}]}},{key:"nickname",component:w.a,props:{label:o.a.createElement("span",null,"Nickname\xa0",o.a.createElement(U.a,{title:"What do you want others to call you?"},o.a.createElement(i.a,{type:"question-circle-o"})))},decorator:{rules:[{required:!0,message:"Please input your nickname!",whitespace:!0}]}},{key:"residence",component:[K.a,{options:X}],props:{label:"Habitual Residence"},decorator:{initialValue:["zhejiang","hangzhou","xihu"],rules:[{type:"array",required:!0,message:"Please select your habitual residence!"}]}},{key:"prefix",component:[x.a,{style:{width:70},children:[o.a.createElement(J,{key:"86",value:"86"},"+86"),o.a.createElement(J,{key:"87",value:"87"},"+87")]}],decorator:{initialValue:"86"}},{key:"website",component:[$.a,{dataSource:this.getWebsiteOptions(),onChange:this.handleWebsiteChange,placeholder:"website"}],props:{label:"Website"},decorator:{initialValue:"86"}},{key:"captcha",component:[w.a,{}],decorator:{rules:[{required:!0,message:"Please input the captcha you got!"}]}},{key:"agreement",component:[B.a,{children:o.a.createElement(o.a.Fragment,null,"I have read the ",o.a.createElement("a",{href:""},"agreement"))}],props:Object(R.a)({},ee),decorator:{valuePropName:"checked"}}]};return o.a.createElement(E.a,{wrappedComponentRef:this.saveFormRef,settings:t,fields:e,onSubmit:this.handleSubmit,onFieldsChange:this.onFieldsChange,render:[function(e,n){var t=e.captcha;return o.a.createElement(k.a.Item,{label:"Captcha",extra:"We must make sure that your are a human."},o.a.createElement(W.a,{gutter:8},o.a.createElement(G.a,{span:12},n[t]),o.a.createElement(G.a,{span:12},o.a.createElement(F.a,null,"Get captcha"))))},function(e,t,a){var r=e.prefix;return o.a.createElement(k.a.Item,n.props,a.form.getFieldDecorator(n.key,n.decorator)(o.a.createElement(w.a,Object.assign({},n.component[1],{addonBefore:t[r]}))))}]},o.a.createElement(k.a.Item,ee,o.a.createElement(F.a,{type:"primary",htmlType:"submit"},"Register")))}}]),n}(o.a.Component),te=t(178),ae=t.n(te),oe=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).state={expand:!1},t.saveFormRef=function(e){t.formRef=e},t.handleReset=function(){t.formRef.form.resetFields()},t.handleSearch=function(e){e.preventDefault(),t.formRef.form.validateFields((function(e,n){e||console.log("Received values of form: ",n)}))},t.toggle=function(){var e=t.state.expand;t.setState({expand:!e})},t.onFieldsChange=function(e,n){console.log(e,n),t.setState((function(n){var t=n.fields;return{fields:Object(R.a)({},t,{},e)}}))},t.onValuesChange=function(e,n){console.log(e,n)},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e=this,n=this.state.fields,t={props:{layout:"horizontal",className:ae.a["ant-advanced-search-form"]},fields:[0,1,2,3,4,5,6,7,8,9].map((function(n){return{key:"field-".concat(n),component:[w.a,{placeholder:"placeholder"}],hidden:e.state.expand&&n>5,props:{label:"Field ".concat(n)},decorator:{rules:[{required:!0,message:"Input something!"}]}}}))};return o.a.createElement(o.a.Fragment,null,o.a.createElement(E.a,{wrappedComponentRef:this.saveFormRef,settings:t,fields:n,onSubmit:this.handleSearch,onValuesChange:this.onValuesChange,onFieldsChange:this.onFieldsChange,render:function(e,n,t,a){return o.a.createElement(W.a,{gutter:24},Object.keys(e).map((function(e){return o.a.createElement(G.a,{span:8,key:e},o.a.createElement(k.a.Item,a[e].props,n[e]))})))}},o.a.createElement(W.a,null,o.a.createElement(G.a,{span:24,style:{textAlign:"right"}},o.a.createElement(F.a,{type:"primary",htmlType:"submit"},"Search"),o.a.createElement(F.a,{style:{marginLeft:8},onClick:this.handleReset},"Clear"),o.a.createElement("a",{style:{marginLeft:8,fontSize:12},onClick:this.toggle},"Collapse ",o.a.createElement(i.a,{type:this.state.expand?"down":"up"}))))),o.a.createElement("div",{className:ae.a["search-result-list"]},"Search Result List"))}}]),n}(o.a.Component),re=(t(207),t(137)),le=(t(524),t(107)),se=le.a.MonthPicker,ie=le.a.RangePicker,ce=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).handleSubmit=function(e,n){e.preventDefault(),n.validateFields((function(e,n){if(e)console.error(e);else{console.log("Received values of form: ",n);var t=n["range-picker"],a=n["range-time-picker"],o=Object(R.a)({},n,{"date-picker":n["date-picker"].format("YYYY-MM-DD"),"date-time-picker":n["date-time-picker"].format("YYYY-MM-DD HH:mm:ss"),"month-picker":n["month-picker"].format("YYYY-MM"),"range-picker":[t[0].format("YYYY-MM-DD"),t[1].format("YYYY-MM-DD")],"range-time-picker":[a[0].format("YYYY-MM-DD HH:mm:ss"),a[1].format("YYYY-MM-DD HH:mm:ss")],"time-picker":n["time-picker"].format("HH:mm:ss")});console.log("Received values of form: ",o)}}))},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e={rules:[{type:"object",required:!0,message:"Please select time!"}]},n={rules:[{type:"array",required:!0,message:"Please select time!"}]},t={props:Object(R.a)({},{labelCol:{xs:{span:24},sm:{span:8}},wrapperCol:{xs:{span:24},sm:{span:16}}}),fields:[{key:"date-picker",component:le.a,props:{label:"DatePicker"},decorator:e},{key:"date-time-picker",component:[le.a,{showTime:!0,format:"YYYY-MM-DD HH:mm:ss"}],props:{label:"DatePicker[showTime]"},decorator:e},{key:"month-picker",component:se,props:{label:"MonthPicker"},decorator:e},{key:"range-picker",component:ie,props:{label:"RangePicker"},decorator:n},{key:"range-time-picker",component:[ie,{showTime:!0,format:"YYYY-MM-DD HH:mm:ss"}],props:{label:"RangePicker[showTime]"},decorator:n},{key:"time-picker",component:re.a,props:{label:"TimePicker"},decorator:e}]};return o.a.createElement(o.a.Fragment,null,o.a.createElement(E.a,{settings:t,onSubmit:this.handleSubmit},o.a.createElement(k.a.Item,{wrapperCol:{xs:{span:24,offset:0},sm:{span:16,offset:8}}},o.a.createElement(F.a,{type:"primary",htmlType:"submit"},"Submit"))))}}]),n}(o.a.Component),me=t(228),ue=t.n(me),pe=[{label:"\u901a\u7528",menus:[{label:"\u5185\u8054\u767b\u5f55\u680f",Component:S,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Icon, Input, Form, Button } from 'antd';\n\nconst settings = {\n  props: {\n    layout: \"inline\"\n  },\n  fields: [\n    {\n      key: 'username',\n      component: [Input, {\n        prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n        placeholder: \"Username\"\n      }],\n      props: {\n      },\n      decorator: {\n        rules: [{ required: true, message: 'Please input your Password!' }],\n      },\n    }, {\n      key: 'password',\n      component: [Input, {\n        type: \"password\",\n        prefix: <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n        placeholder: \"Password\"\n      }],\n      decorator: {\n        rules: [{ required: true, message: 'Please input your username!' }],\n      },\n    }\n  ]\n};\n\nexport default class Example extends React.Component {\n\n  state = {\n    fields: {\n      username: {\n        // value: 'benjycui',\n      },\n      password: {\n        // value: 'password',\n      },\n    },\n  };\n\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    // this.formRef.form.validateFields();\n    console.log(this.formRef)\n  }\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.formRef.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  onFieldsChange = (changedFields, allFields) => {\n    console.log(changedFields, allFields);\n    this.setState(({ fields }) => ({\n      fields: { ...fields, ...changedFields },\n    }));\n  }\n\n  onValuesChange = (changedValues, allValues) => {\n    console.log(changedValues, allValues);\n  }\n\n  render() {\n    // const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.formRef.form;\n    const { fields } = this.state;\n\n    // Only show error after a field is touched.\n    // const usernameError = isFieldTouched('username') && getFieldError('username');\n    // const passwordError = isFieldTouched('password') && getFieldError('password');\n\n    // console.log(getFieldsError());\n    return (\n      <DynamicForm\n        wrappedComponentRef={this.saveFormRef}\n        settings={settings}\n        fields={fields}\n        onValuesChange={this.onValuesChange}\n        onFieldsChange={this.onFieldsChange}>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit}\n          // disabled={hasErrors(getFieldsError())}\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </DynamicForm>\n    );\n  }\n}"},{label:"\u767b\u5f55\u6846",Component:z,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Icon, Input, Form, Button, Checkbox } from 'antd';\nimport styles from './login.module.less';\n\nconst settings = {\n    props: {\n        // layout: \"inline\",\n        className: styles[\"login-form\"]\n    },\n    fields: [\n        {\n            key: 'username',\n            component: [Input, {\n                prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                placeholder: \"Username\"\n            }],\n            props: {\n            },\n            decorator: {\n                rules: [{ required: true, message: 'Please input your username!' }],\n            },\n        }, {\n            key: 'password',\n            component: [Input, {\n                type: \"password\",\n                prefix: <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                placeholder: \"Password\"\n            }],\n            decorator: {\n                rules: [{ required: true, message: 'Please input your Password!' }],\n            },\n        }, {\n            key: 'remember',\n            component: [Checkbox, {\n                children: 'Remember me'\n            }],\n            decorator: {\n                valuePropName: 'checked',\n                initialValue: true,\n            },\n        }\n    ]\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            username: {\n                value: '1111'\n            }\n        }\n    };\n\n    componentDidMount() {\n        console.log(this.formRef)\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.formRef.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        return (\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSubmit}\n                onValuesChange={this.onValuesChange}\n                onFieldsChange={this.onFieldsChange}\n                render={[({ remember }, fields) => <Form.Item>\n                    {fields[remember]}\n                    <a className={styles['login-form-forgot']} href=\"\">Forgot password</a>\n                </Form.Item>]}>\n                <Button type=\"primary\" htmlType=\"submit\" className={styles['login-form-button']}>\n                    Log in\n                </Button>\n                <Form.Item>\n                    Or <a href=\"\">register now!</a>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}"},{label:"\u6ce8\u518c\u65b0\u7528\u6237",Component:ne,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    AutoComplete,\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst residences = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        children: [\n            {\n                value: 'hangzhou',\n                label: 'Hangzhou',\n                children: [\n                    {\n                        value: 'xihu',\n                        label: 'West Lake',\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        children: [\n            {\n                value: 'nanjing',\n                label: 'Nanjing',\n                children: [\n                    {\n                        value: 'zhonghuamen',\n                        label: 'Zhong Hua Men',\n                    },\n                ],\n            },\n        ],\n    },\n];\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n        fields: {\n            prefix: {\n                value: '86'\n            },\n            phone: {\n                value: '',\n            }\n        }\n    };\n\n    handleWebsiteChange = value => {\n        let autoCompleteResult;\n        if (!value) {\n            autoCompleteResult = [];\n        } else {\n            autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n        }\n        this.setState({ autoCompleteResult });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        // debugger;\n        const { form } = this.formRef;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        // debugger;\n        const { form } = this.formRef;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    getWebsiteOptions = () => this.state.autoCompleteResult.map(website => (\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    componentDidMount() {\n        console.log(this.formRef)\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSubmit = (e, formRef) => {\n        e.preventDefault();\n        formRef.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        // debugger;\n        const phoneSettings = {\n            key: 'phone',\n            component: [Input, {\n                style: { width: '100%' }\n            }],\n            props: {\n                label: 'Phone Number',\n            },\n            decorator: {\n                initialValue: fields.phone.value,\n                rules: [{ required: true, message: 'Please input your phone number!' }],\n            },\n        };\n\n        const settings = {\n            props: {\n                ...formItemLayout,\n            },\n            fields: [\n                {\n                    key: 'email',\n                    component: [Input, {\n                        prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                        placeholder: \"Username\"\n                    }],\n                    hidden: true,\n                    props: {\n                        label: 'E-mail',\n                    },\n                    decorator: {\n                        rules: [\n                            { type: 'email', message: 'The input is not valid E-mail!' },\n                            { required: true, message: 'Please input your E-mail!' },\n                        ],\n                    },\n                }, {\n                    key: 'password',\n                    component: Input.Password,\n                    props: {\n                        label: 'Password',\n                        hasFeedback: true,\n                    },\n                    decorator: {\n                        rules: [\n                            { required: true, message: 'Please input your password!' },\n                            { validator: this.validateToNextPassword },\n                        ],\n                    },\n                }, {\n                    key: 'confirm',\n                    component: [Input.Password, {\n                        onBlur: this.handleConfirmBlur\n                    }],\n                    props: {\n                        label: 'Confirm Password',\n                        hasFeedback: true,\n                    },\n                    decorator: {\n                        rules: [\n                            { required: true, message: 'Please confirm your password!' },\n                            { validator: this.compareToFirstPassword },\n                        ],\n                    },\n                }, {\n                    key: 'nickname',\n                    component: Input,\n                    props: {\n                        label: <span>Nickname&nbsp;\n                            <Tooltip title=\"What do you want others to call you?\">\n                                <Icon type=\"question-circle-o\" />\n                            </Tooltip>\n                        </span>,\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n                    },\n                }, {\n                    key: 'residence',\n                    component: [Cascader, {\n                        options: residences\n                    }],\n                    props: {\n                        label: 'Habitual Residence',\n                    },\n                    decorator: {\n                        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                        rules: [\n                            { type: 'array', required: true, message: 'Please select your habitual residence!' },\n                        ],\n                    },\n                }, {\n                    key: 'prefix',\n                    component: [Select, {\n                        style: { width: 70 },\n                        children: [\n                            <Option key=\"86\" value=\"86\">+86</Option>,\n                            <Option key=\"87\" value=\"87\">+87</Option>\n                        ],\n                    }],\n                    decorator: {\n                        initialValue: \"86\"\n                    },\n                }, {\n                    key: 'website',\n                    component: [AutoComplete, {\n                        dataSource: this.getWebsiteOptions(),\n                        onChange: this.handleWebsiteChange,\n                        placeholder: \"website\"\n                    }],\n                    props: {\n                        label: 'Website'\n                    },\n                    decorator: {\n                        initialValue: \"86\"\n                    },\n                }, {\n                    key: 'captcha',\n                    component: [Input, {\n                    }],\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input the captcha you got!' }],\n                    },\n                }, {\n                    key: 'agreement',\n                    component: [Checkbox, {\n                        children: <>\n                            I have read the <a href=\"\">agreement</a>\n                        </>\n                    }],\n                    props: {\n                        ...tailFormItemLayout,\n                    },\n                    decorator: {\n                        valuePropName: 'checked'\n                    },\n                }\n            ]\n        };\n        return (\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSubmit}\n                onFieldsChange={this.onFieldsChange}\n                render={[\n                    ({ captcha }, fields) => <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n                        <Row gutter={8}>\n                            <Col span={12}>\n                                {fields[captcha]}\n                            </Col>\n                            <Col span={12}>\n                                <Button>Get captcha</Button>\n                            </Col>\n                        </Row>\n                    </Form.Item>,\n                    ({ prefix }, fields, ref) => <Form.Item {...phoneSettings.props}>\n                        {ref.form.getFieldDecorator(phoneSettings.key, phoneSettings.decorator)(<Input {...phoneSettings.component[1]} addonBefore={fields[prefix]} />)}\n                    </Form.Item>\n                ]}>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}"},{label:"\u9ad8\u7ea7\u641c\u7d22",Component:oe,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Row, Col, Icon, Input, Form, Button, Checkbox } from 'antd';\nimport styles from './search.module.less';\n\nexport default class Example extends React.Component {\n\n    state = {\n        expand: false,\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleReset = () => {\n        this.formRef.form.resetFields();\n    };\n\n    handleSearch = e => {\n        e.preventDefault();\n        this.formRef.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    toggle = () => {\n        const { expand } = this.state;\n        this.setState({ expand: !expand });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        const count = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        const settings = {\n            props: {\n                layout: 'horizontal',\n                className: styles[\"ant-advanced-search-form\"]\n            },\n            fields: count.map((idx) => ({\n                key: `field-${idx}`,\n                component: [Input, {\n                    placeholder: \"placeholder\"\n                }],\n                hidden: this.state.expand && idx > 5,\n                props: {\n                    label: `Field ${idx}`\n                },\n                decorator: {\n                    rules: [{ required: true, message: 'Input something!' }],\n                },\n            }))\n        };\n\n        return (<>\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSearch}\n                onValuesChange={this.onValuesChange}\n                onFieldsChange={this.onFieldsChange}\n                render={(keys, fields, _, fieldMap) => <Row gutter={24}>{\n                    Object.keys(keys).map((name) => <Col span={8} key={name}>\n                        <Form.Item {...fieldMap[name].props}>\n                            {fields[name]}\n                        </Form.Item>\n                    </Col>)\n                }</Row>}>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Search\n                        </Button>\n                        <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n                            Clear\n                        </Button>\n                        <a style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n                            Collapse <Icon type={this.state.expand ? 'down' : 'up'} />\n                        </a>\n                    </Col>\n                </Row>\n            </DynamicForm>\n            <div className={styles['search-result-list']}>Search Result List</div>\n        </>\n        );\n    }\n}"},{label:"\u5f39\u51fa\u5c42\u4e2d\u8868\u5355",Component:_,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Radio, Button, Modal } from 'antd';\n\nclass CollectionCreateForm extends React.Component {\n\n    render() {\n        const { visible, onCancel, onCreate, wrappedComponentRef } = this.props;\n        const settings = {\n            props: {\n                layout: \"vertical\",\n            },\n            fields: [{\n                key: 'title',\n                component: Input,\n                props: {\n                    label: `Title`\n                },\n                decorator: {\n                    rules: [{ required: true, message: 'Please input the title of collection!' }],\n                },\n            }, {\n                key: 'description',\n                component: [Input, {\n                    type: \"textarea\"\n                }],\n                props: {\n                    label: `Description`\n                },\n            }, {\n                key: 'modifier',\n                component: [Radio.Group, {\n                    type: \"textarea\",\n                    children: [<Radio key={'public'} value=\"public\">Public</Radio>,\n                    <Radio key={'private'} value=\"private\">Private</Radio>]\n                }],\n            }]\n        };\n\n        return (\n            <Modal\n                visible={visible}\n                title=\"Create a new collection\"\n                okText=\"Create\"\n                onCancel={onCancel}\n                onOk={onCreate}\n            >\n                <DynamicForm\n                    wrappedComponentRef={wrappedComponentRef}\n                    settings={settings} />\n            </Modal>\n        );\n    }\n}\n\nexport default class Example extends React.Component {\n\n    state = {\n        visible: false,\n    };\n\n    showModal = () => {\n        this.setState({ visible: true });\n    };\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n\n    handleCreate = () => {\n        const { form } = this.formRef;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            console.log('Received values of form: ', values);\n            form.resetFields();\n            this.setState({ visible: false });\n        });\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    render() {\n        return <div>\n            <Button type=\"primary\" onClick={this.showModal}>\n                New Collection\n            </Button>\n            <CollectionCreateForm\n                wrappedComponentRef={this.saveFormRef}\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                onCreate={this.handleCreate}\n            />\n        </div>\n    }\n}"},{label:"\u65f6\u95f4\u7c7b\u63a7\u4ef6",Component:ce,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Form, DatePicker, TimePicker, Button } from 'antd';\n\nconst { MonthPicker, RangePicker } = DatePicker;\n\nexport default class Example extends React.Component {\n\n    // state = {};\n\n    handleSubmit = (e, formRef) => {\n        e.preventDefault();\n        formRef.validateFields((err, fieldsValue) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n\n            console.log('Received values of form: ', fieldsValue);\n            // Should format date value before submit.\n            const rangeValue = fieldsValue['range-picker'];\n            const rangeTimeValue = fieldsValue['range-time-picker'];\n            const values = {\n                ...fieldsValue,\n                'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n                'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n                'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n                'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n                'range-time-picker': [\n                    rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\n                    rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\n                ],\n                'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\n            };\n            console.log('Received values of form: ', values);\n        });\n    };\n\n    // onFieldsChange = (changedFields, allFields) => {\n    //     console.log(changedFields, allFields);\n    //     this.setState(({ fields }) => ({\n    //         fields: { ...fields, ...changedFields },\n    //     }));\n    // }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n        const config = {\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n        };\n        const rangeConfig = {\n            rules: [{ type: 'array', required: true, message: 'Please select time!' }],\n        };\n\n        const settings = {\n            props: {\n                ...formItemLayout\n            },\n            fields: [{\n                key: 'date-picker',\n                component: DatePicker,\n                props: {\n                    label: 'DatePicker'\n                },\n                decorator: config,\n            },{\n                key: 'date-time-picker',\n                component: [DatePicker, {\n                    showTime: true,\n                    format: \"YYYY-MM-DD HH:mm:ss\"\n                }],\n                props: {\n                    label: 'DatePicker[showTime]'\n                },\n                decorator: config,\n            },{\n                key: 'month-picker',\n                component: MonthPicker,\n                props: {\n                    label: 'MonthPicker'\n                },\n                decorator: config,\n            },{\n                key: 'range-picker',\n                component: RangePicker,\n                props: {\n                    label: 'RangePicker'\n                },\n                decorator: rangeConfig,\n            },{\n                key: 'range-time-picker',\n                component: [RangePicker, {\n                    showTime: true,\n                    format: \"YYYY-MM-DD HH:mm:ss\"\n                }],\n                props: {\n                    label: 'RangePicker[showTime]'\n                },\n                decorator: rangeConfig,\n            },{\n                key: 'time-picker',\n                component: TimePicker,\n                props: {\n                    label: 'TimePicker'\n                },\n                decorator: config,\n            }]\n        };\n\n        // const { fields } = this.state;\n        return (<>\n            <DynamicForm\n                settings={settings}\n                onSubmit={this.handleSubmit}\n                // fields={fields}\n                // onFieldsChange={this.onFieldsChange}\n                >\n                <Form.Item wrapperCol={{\n                    xs: { span: 24, offset: 0 },\n                    sm: { span: 16, offset: 8 },\n                }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        </>\n        );\n    }\n}"},{label:"\u81ea\u5b9a\u4e49\u8868\u5355\u63a7\u4ef6",Component:V,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Form, Input, Select, Button } from 'antd';\n\nconst { Option } = Select;\n\nclass PriceInput extends React.Component {\n    handleNumberChange = e => {\n        const number = parseInt(e.target.value || 0, 10);\n        if (isNaN(number)) {\n            return;\n        }\n        this.triggerChange({ number });\n    };\n\n    handleCurrencyChange = currency => {\n        this.triggerChange({ currency });\n    };\n\n    triggerChange = changedValue => {\n        const { onChange, value } = this.props;\n        if (onChange) {\n            onChange({\n                ...value,\n                ...changedValue,\n            });\n        }\n    };\n\n    render() {\n        const { size, value } = this.props;\n        return (\n            <span>\n                <Input\n                    type=\"text\"\n                    size={size}\n                    value={value.number}\n                    onChange={this.handleNumberChange}\n                    style={{ width: '65%', marginRight: '3%' }}\n                />\n                <Select\n                    value={value.currency}\n                    size={size}\n                    style={{ width: '32%' }}\n                    onChange={this.handleCurrencyChange}\n                >\n                    <Option value=\"rmb\">RMB</Option>\n                    <Option value=\"dollar\">Dollar</Option>\n                </Select>\n            </span>\n        );\n    }\n}\n\nexport default class Example extends React.Component {\n\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    checkPrice = (rule, value, callback) => {\n        if (value.number > 0) {\n            return callback();\n        }\n        callback('Price must greater than zero!');\n    };\n\n\n    render() {\n        const settings = {\n            props: {\n                layout: \"inline\"\n            },\n            fields: [\n                {\n                    key: 'price',\n                    component: PriceInput,\n                    decorator: {\n                        initialValue: { number: 0, currency: 'rmb' },\n                        rules: [{ validator: this.checkPrice }],\n                    },\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                onSubmit={this.handleSubmit}\n            >\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}"},{label:"\u8868\u5355\u8054\u52a8",Component:D,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Form, Select, Button } from 'antd';\n\nconst { Option } = Select;\n\nexport default class Example extends React.Component {\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSelectChange = value => {\n        console.log(value);\n        this.formRef.form.setFieldsValue({\n            note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\n        });\n    };\n\n    render() {\n        const settings = {\n            props: {\n                labelCol: { span: 5 },\n                wrapperCol: { span: 12 }\n            },\n            fields: [\n                {\n                    key: 'note',\n                    component: Input,\n                    props: {\n                        label: 'Note',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input your note!' }],\n                    }\n                }, {\n                    key: 'gender',\n                    component: [Select, {\n                        placeholder: \"Select a option and change input text above\",\n                        onChange: this.handleSelectChange,\n                        children: [\n                            <Option value=\"male\" key=\"male\">male</Option>,\n                            <Option value=\"female\" key=\"female\">female</Option>\n                        ]\n                    }],\n                    props: {\n                        label: 'Gender',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please select your gender!' }],\n                    }\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                wrappedComponentRef={this.saveFormRef}\n                onSubmit={this.handleSubmit}>\n                <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}"},{label:"\u8868\u5355\u5e03\u5c40",Component:T,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Radio, Input, Form, Button } from 'antd';\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            layout: {\n                value: 'horizontal',\n            },\n        },\n    };\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    render() {\n        const { fields } = this.state;\n        const formLayout = fields.layout.value;\n        const formItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                    labelCol: { span: 4 },\n                    wrapperCol: { span: 14 },\n                }\n                : null;\n        const buttonItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                    wrapperCol: { span: 14, offset: 4 },\n                }\n                : null;\n        const settings = {\n            props: {\n                layout: formLayout\n            },\n            fields: [\n                {\n                    key: 'layout',\n                    component: [Radio.Group, {\n                        children: [\n                            <Radio.Button value=\"horizontal\">Horizontal</Radio.Button>,\n                            <Radio.Button value=\"vertical\">Vertical</Radio.Button>,\n                            <Radio.Button value=\"inline\">Inline</Radio.Button>\n                        ]\n                    }],\n                    props: {\n                        label: 'Form Layout',\n                        ...formItemLayout\n                    },\n                }, {\n                    key: 'field-a',\n                    component: [Input, {\n                        placeholder: \"input placeholder a\"\n                    }],\n                    props: {\n                        label: 'Field A',\n                        ...formItemLayout\n                    },\n                }, {\n                    key: 'field-b',\n                    component: [Input, {\n                        placeholder: \"input placeholder b\"\n                    }],\n                    props: {\n                        label: 'Field B',\n                        ...formItemLayout\n                    },\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                fields={fields}\n                settings={settings}\n                onFieldsChange={this.onFieldsChange}\n                onSubmit={this.handleSubmit}>\n                <Form.Item {...buttonItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}"},{label:"\u52a8\u6001\u6821\u9a8c\u89c4\u5219",Component:Y.a,source:"import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Form, Button, Checkbox, Select } from 'antd';\n\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 8 },\n};\nconst formTailLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 8, offset: 4 },\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            checkNick: {\n                value: true,\n            }\n        }\n    };\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.info('success', values);\n            }else{\n                console.error(err);\n            }\n        });\n    };\n    \n    onValuesChange=(_, __, form) => {\n        setTimeout(()=>{\n            form.validateFields(['nickname'], {force: true});\n        });\n    }\n    \n    onFieldsChange = (changedFields) => {\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n    \n    render() {\n        const { fields } = this.state;\n        const options = fields.checkNick.value ? ['male', 'female'] : ['male', 'female', 'others']\n        const settings = {\n            fields: [\n                {\n                    key: 'username',\n                    component: [Input, {\n                        placeholder: 'Please input your name',\n                    }],\n                    props: {\n                        label: \"Name\",\n                        ...formItemLayout,\n                    },\n                    decorator: {\n                        rules: [\n                            {\n                                required: true,\n                                message: 'Please input your name',\n                            },\n                        ],\n                    }\n                }, {\n                    key: 'nickname',\n                    component: [Input, {\n                        placeholder: 'Please input your nickname',\n                    }],\n                    props: {\n                        label: \"Nickname\",\n                        ...formItemLayout,\n                    },\n                    decorator: {\n                        rules: [\n                            {\n                                required: fields.checkNick.value,\n                                message: 'Please input your nickname',\n                            },\n                        ],\n                    }\n                }, {\n                    key: 'checkNick',\n                    component: [Checkbox, {\n                        children: 'Nickname is required',\n                    }],\n                    props: {\n                        ...formTailLayout\n                    },\n                    decorator: {\n                        valuePropName: 'checked',\n                    }\n                }, {\n                    key: 'gender',\n                    component: [Select, {\n                        allowClear: true,\n                        placeholder: \"Select a option and change input text above\",\n                        onChange: this.handleSelectChange,\n                        children: options.map(option => <Option key={option} value={option} >{option}</Option>)\n                    }],\n                    props: {\n                        ...formItemLayout,\n                        label: 'Gender',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please select your gender!' }],\n                    }\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                fields={fields}\n                onFieldsChange={this.onFieldsChange}\n                onValuesChange={this.onValuesChange}\n                onSubmit={this.handleSubmit}>\n                <Form.Item {...formTailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Check\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}"}]}],de=pe.reduce((function(e,n){return n.menus.forEach((function(n){e[n.label]=n})),e}),{}),fe=f.a.Header,he=f.a.Content,ge=f.a.Sider,ye=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(o)))).state={selectedKey:"\u5185\u8054\u767b\u5f55\u680f"},t.onSelect=function(e){t.setState({selectedKey:e})},t}return Object(d.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e=this.state.selectedKey,n=de[e],t=n.source,a=n.language,r=n.Component;return console.log(t),o.a.createElement(f.a,{style:{height:"100vh",background:"#fff"}},o.a.createElement(fe,{style:{background:"#fff",height:"48px"}},o.a.createElement(s.a,{mode:"horizontal"},o.a.createElement(s.a.Item,{key:"alipay"},o.a.createElement("a",{href:"https://github.com/Derek-Hu/rc-form-dynamic",target:"_blank",rel:"noopener noreferrer"},o.a.createElement(i.a,{type:"github"}),"Github")))),o.a.createElement(f.a,null,o.a.createElement(ge,null,o.a.createElement(g,{datas:pe,onSelect:this.onSelect})),t?o.a.createElement(he,{className:"elements-container",style:{width:"60%",background:"#fff"}},"README"===e?o.a.createElement(ue.a,{source:t}):o.a.createElement(C,{code:t,language:a})):null,r?o.a.createElement(f.a,{style:{width:"40%",padding:"1em 2em",background:"#FFF"}},o.a.createElement(he,{style:{background:"#fff"}},o.a.createElement(r,null))):null))}}]),n}(o.a.Component);l.a.render(o.a.createElement(ye,null),document.getElementById("root"))},91:function(e,n,t){},99:function(e,n,t){"use strict";t.d(n,"a",(function(){return C}));t(41);var a=t(13),o=(t(33),t(3)),r=(t(83),t(51)),l=(t(35),t(20)),s=t(22),i=t(14),c=t(15),m=t(17),u=t(16),p=t(18),d=(t(82),t(31)),f=t(0),h=t.n(f),g=t(26),y=d.a.Option,b={labelCol:{span:4},wrapperCol:{span:8}},v={labelCol:{span:4},wrapperCol:{span:8,offset:4}},C=function(e){function n(){var e,t;Object(i.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(m.a)(this,(e=Object(u.a)(n)).call.apply(e,[this].concat(o)))).state={fields:{checkNick:{value:!0}}},t.handleSubmit=function(e,n){e.preventDefault(),n.validateFields((function(e,n){e?console.error(e):console.info("success",n)}))},t.onValuesChange=function(e,n,t){setTimeout((function(){t.validateFields(["nickname"],{force:!0})}))},t.onFieldsChange=function(e){t.setState((function(n){var t=n.fields;return{fields:Object(s.a)({},t,{},e)}}))},t}return Object(p.a)(n,e),Object(c.a)(n,[{key:"render",value:function(){var e=this.state.fields,n=e.checkNick.value?["male","female"]:["male","female","others"],t={fields:[{key:"username",component:[l.a,{placeholder:"Please input your name"}],props:Object(s.a)({label:"Name"},b),decorator:{rules:[{required:!0,message:"Please input your name"}]}},{key:"nickname",component:[l.a,{placeholder:"Please input your nickname"}],props:Object(s.a)({label:"Nickname"},b),decorator:{rules:[{required:e.checkNick.value,message:"Please input your nickname"}]}},{key:"checkNick",component:[r.a,{children:"Nickname is required"}],props:Object(s.a)({},v),decorator:{valuePropName:"checked"}},{key:"gender",component:[d.a,{allowClear:!0,placeholder:"Select a option and change input text above",onChange:this.handleSelectChange,children:n.map((function(e){return h.a.createElement(y,{key:e,value:e},e)}))}],props:Object(s.a)({},b,{label:"Gender"}),decorator:{rules:[{required:!0,message:"Please select your gender!"}]}}]};return h.a.createElement(g.a,{settings:t,fields:e,onFieldsChange:this.onFieldsChange,onValuesChange:this.onValuesChange,onSubmit:this.handleSubmit},h.a.createElement(a.a.Item,v,h.a.createElement(o.a,{type:"primary",htmlType:"submit"},"Check")))}}]),n}(h.a.Component)}},[[234,3,0]]]);
//# sourceMappingURL=main.13521d86.chunk.js.map