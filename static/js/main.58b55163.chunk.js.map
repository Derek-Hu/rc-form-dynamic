{"version":3,"sources":["components/form/example/dynamicRule.js","components/form/example/login.module.less","components/form/example/search.module.less","rc-form-dynamic/index.js","components/example-list.jsx","components/codeview.jsx","components/form/example/basic.js","components/form/example/cascade.js","components/form/example/custom.js","components/form/example/layout.js","components/form/example/login.js","components/form/example/modal.js","components/form/example/register.js","components/form/example/search.js","components/form/example/time.js","Example.js","index.js"],"names":["Option","formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","Example","state","fields","checkNick","value","handleSubmit","e","form","preventDefault","validateFields","err","values","console","error","info","onValuesChange","_","__","setTimeout","force","onFieldsChange","changedFields","setState","this","options","settings","key","component","placeholder","props","label","decorator","rules","required","message","children","valuePropName","allowClear","onChange","handleSelectChange","map","option","onSubmit","Item","type","htmlType","React","Component","module","exports","create","allFields","mapPropsToFields","formData","allKeys","reduce","allKey","field","Object","keys","formFields","fieldData","createFormField","changedValues","allValues","forwardRef","ref","useImperativeHandle","fromProps","render","length","keyArgs","FieldInstances","batchKeys","currentBatchNumber","FormFieldsGetter","totalKey","defineProperty","get","FieldMap","forEach","hidden","parentProps","getFieldDecorator","Array","isArray","componentProps","renderField","push","interceptors","filter","child","CustomItems","interceptor","index","customs","cloneElement","batchKeyGraph","graph","batchIndex","batch","args","allInterceptorKeys","concat","formItems","indexOf","batchKey","submitProps","SubMenu","Sider","onSelect","item","keyPath","selectedKeys","domEvent","log","datas","style","height","width","textAlign","defaultSelectedKeys","defaultOpenKeys","mode","title","ItemGroup","menus","m","name","SyntaxHighlighter","registerLanguage","jsx","language","showLineNumbers","prism","code","layout","prefix","color","username","password","saveFormRef","formRef","wrappedComponentRef","onClick","setFieldsValue","note","PriceInput","handleNumberChange","number","parseInt","target","isNaN","triggerChange","handleCurrencyChange","currency","changedValue","size","marginRight","checkPrice","rule","callback","initialValue","validator","formLayout","buttonItemLayout","Group","Button","className","styles","remember","href","CollectionCreateForm","visible","onCancel","onCreate","okText","onOk","showModal","handleCancel","handleCreate","resetFields","AutoCompleteOption","residences","xs","sm","tailFormItemLayout","confirmDirty","autoCompleteResult","phone","handleWebsiteChange","domain","compareToFirstPassword","getFieldValue","validateToNextPassword","handleConfirmBlur","getWebsiteOptions","website","phoneSettings","Password","hasFeedback","onBlur","whitespace","dataSource","captcha","extra","gutter","addonBefore","expand","handleReset","handleSearch","toggle","idx","fieldMap","marginLeft","fontSize","MonthPicker","RangePicker","fieldsValue","rangeValue","rangeTimeValue","format","config","rangeConfig","showTime","BasicExample","source","LoginExample","RegisterExample","SearchExample","ModalExample","TimeExample","CustomExample","CascadeExample","LayoutExample","DynamicRuleExample","ComponentMap","category","Header","Content","Main","selectedKey","background","rel","padding","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.58b55163.chunk.js","sourcesContent":["import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Form, Button, Checkbox, Select } from 'antd';\n\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 8 },\n};\nconst formTailLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 8, offset: 4 },\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            checkNick: {\n                value: true,\n            }\n        }\n    };\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.info('success', values);\n            }else{\n                console.error(err);\n            }\n        });\n    };\n    \n    onValuesChange=(_, __, form) => {\n        setTimeout(()=>{\n            form.validateFields(['nickname'], {force: true});\n        });\n    }\n    \n    onFieldsChange = (changedFields) => {\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n    \n    render() {\n        const { fields } = this.state;\n        const options = fields.checkNick.value ? ['male', 'female'] : ['male', 'female', 'others']\n        const settings = {\n            fields: [\n                {\n                    key: 'username',\n                    component: [Input, {\n                        placeholder: 'Please input your name',\n                    }],\n                    props: {\n                        label: \"Name\",\n                        ...formItemLayout,\n                    },\n                    decorator: {\n                        rules: [\n                            {\n                                required: true,\n                                message: 'Please input your name',\n                            },\n                        ],\n                    }\n                }, {\n                    key: 'nickname',\n                    component: [Input, {\n                        placeholder: 'Please input your nickname',\n                    }],\n                    props: {\n                        label: \"Nickname\",\n                        ...formItemLayout,\n                    },\n                    decorator: {\n                        rules: [\n                            {\n                                required: fields.checkNick.value,\n                                message: 'Please input your nickname',\n                            },\n                        ],\n                    }\n                }, {\n                    key: 'checkNick',\n                    component: [Checkbox, {\n                        children: 'Nickname is required',\n                    }],\n                    props: {\n                        ...formTailLayout\n                    },\n                    decorator: {\n                        valuePropName: 'checked',\n                    }\n                }, {\n                    key: 'gender',\n                    component: [Select, {\n                        allowClear: true,\n                        placeholder: \"Select a option and change input text above\",\n                        onChange: this.handleSelectChange,\n                        children: options.map(option => <Option key={option} value={option} >{option}</Option>)\n                    }],\n                    props: {\n                        ...formItemLayout,\n                        label: 'Gender',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please select your gender!' }],\n                    }\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                fields={fields}\n                onFieldsChange={this.onFieldsChange}\n                onValuesChange={this.onValuesChange}\n                onSubmit={this.handleSubmit}>\n                <Form.Item {...formTailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Check\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form\":\"src-components-form-example-login-module__login-form--3YIF9\",\"login-form-forgot\":\"src-components-form-example-login-module__login-form-forgot--1gXoq\",\"login-form-button\":\"src-components-form-example-login-module__login-form-button--3DEIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-advanced-search-form\":\"src-components-form-example-search-module__ant-advanced-search-form--2MUM_\",\"search-result-list\":\"src-components-form-example-search-module__search-result-list--3PcGO\"};","import React, { forwardRef, useImperativeHandle } from 'react';\nimport { Form } from 'antd';\n\nconst ComponentName = 'DynamicForm';\nconst renderField = (field, parentProps) => {\n  const { getFieldDecorator } = parentProps.form;\n  const { key, component, decorator } = field;\n  const [Component, componentProps] = Array.isArray(component) ? component : [component];\n  const { children } = componentProps || {};\n  return getFieldDecorator(key, decorator)(<Component {...componentProps}>{children}</Component>);\n}\n\nexport default Form.create({\n  onFieldsChange(props, changedFields, allFields) {\n    props.onFieldsChange && props.onFieldsChange(changedFields, allFields, props.form);\n  },\n  mapPropsToFields(props) {\n    const { settings: { fields } } = props;\n    const formData = props.fields;\n    if (!formData || !fields) {\n      return;\n    }\n    const allKeys = fields.reduce((allKey, field)=> {\n      allKey[field.key] = true;\n      return allKey;\n    }, {});\n    return Object.keys(formData).reduce((formFields, key)=>{\n      if(key in allKeys){\n        const fieldData = formData[key];\n        formFields[key] = Form.createFormField({\n          ...fieldData,\n          value: fieldData && fieldData.value,\n        });\n      }\n      return formFields;\n    }, {});\n  },\n  onValuesChange(props, changedValues, allValues) {\n    props.onValuesChange && props.onValuesChange(changedValues, allValues, props.form);\n  },\n})(forwardRef((props, ref) => {\n\n  useImperativeHandle(ref, () => ({\n    form: props.form,\n  }));\n\n  const { settings: { props: fromProps, fields }, render, children, onSubmit, onFieldsChange, fields: formData } = props;\n\n  if (!fields || !fields.length) {\n    return null;\n  }\n\n  if(onFieldsChange && !formData){\n    console.error(`Missing prop 'fields' when 'onFieldsChange' exists in <${ComponentName} onFieldsChange={() => {}} fields={}/>`)\n  }\n  const keyArgs = {};\n  const FieldInstances = {};\n  const batchKeys = {};\n  let currentBatchNumber = -1;\n  const FormFieldsGetter = {};\n  const totalKey = {};\n\n  Object.defineProperty(FormFieldsGetter, 'undefined', {\n    get: function () {\n      console.error(`Key not match in render params: <${ComponentName} render={[({key}, fields) => Component ]} />`)\n      return null;\n    }\n  });\n\n  const FieldMap = {};\n  fields.forEach(field => {\n    if (field.hidden) {\n      return;\n    }\n    const key = field.key;\n    if (key in totalKey) {\n      console.error(`Duplicate Key '${key}' props settings, <${ComponentName} settings={settings} />`)\n      return;\n    }\n    FieldMap[key] = field;\n    totalKey[key] = true;\n    FieldInstances[key] = renderField(field, props);\n    keyArgs[key] = key;\n    Object.defineProperty(FormFieldsGetter, key, {\n      get: function () {\n        if (!batchKeys[currentBatchNumber]) {\n          batchKeys[currentBatchNumber] = [];\n        }\n        batchKeys[currentBatchNumber].push(key);\n        return FieldInstances[key];\n      }\n    });\n  });\n\n  const interceptors = (Array.isArray(render) ? render : [render]).filter(child => typeof child === 'function');\n  const CustomItems = interceptors && interceptors.length ? interceptors.map((interceptor, index) => {\n    currentBatchNumber = index;\n    const customs = interceptor(keyArgs, FormFieldsGetter, props, FieldMap);\n    if (!customs) {\n      console.error(`Should return Component: <${ComponentName} render={[({key}, fields) => Component]} />`);\n      return null;\n    }\n    return React.cloneElement(customs, { key: `batch_${index}` });\n  }) : null;\n\n  const batchKeyGraph = Object.keys(batchKeys).reduce((graph, batchIndex) => {\n    const batch = batchKeys[batchIndex];\n    if (!graph[batch[0]]) {\n      graph[batch[0]] = [];\n    }\n    graph[batch[0]].push({ index: batchIndex, args: batch });\n    return graph;\n  }, {});\n\n  const allInterceptorKeys = Object.keys(batchKeys).reduce((allKeys, index) => {\n    return allKeys.concat(batchKeys[index]);\n  }, []);\n\n  const formItems = fields.map((field) => {\n    const { key, props } = field;\n    if (!totalKey[key]) {\n      return null;\n    }\n    if (allInterceptorKeys.indexOf(key) === -1) {\n      return <Form.Item {...props} key={key}>{FieldInstances[key]}</Form.Item>;\n    }\n    if ((key in batchKeyGraph)) {\n      return batchKeyGraph[key].map(batch => {\n        batch.args.forEach(batchKey => {\n          totalKey[batchKey] = false;\n        });\n        return CustomItems[batch.index];\n      });\n    }\n  });\n  const submitProps = {};\n  if(onSubmit){\n    submitProps.onSubmit = (e) => onSubmit(e, props.form);\n  }\n  return <Form {...fromProps} {...submitProps}>{formItems}{children}</Form>;\n}));","import React from 'react';\nimport { Menu } from 'antd';\n\nconst { SubMenu } = Menu;\n\nexport default class Sider extends React.Component {\n  onSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\n    console.log('click ', { item, key, keyPath, selectedKeys, domEvent });\n    this.props.onSelect && this.props.onSelect(key);\n  };\n\n  render() {\n    const {datas} = this.props;\n\n    return (\n      <Menu\n        onSelect={this.onSelect}\n        style={{ height:'100%', width: '100%', textAlign:'left' }}\n        defaultSelectedKeys={['README']}\n        defaultOpenKeys={['sub1']}\n        mode=\"inline\"\n        // theme=\"dark\"\n      >\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <span>rc-dynamic-form</span>\n            </span>\n          }\n        >\n          {\n            datas.map(item => <Menu.ItemGroup key={item.label} title={item.label}>\n              {\n                item.menus.map(m => <Menu.Item key={m.label}>{m.name}&nbsp;{m.label}</Menu.Item>)\n              }\n            </Menu.ItemGroup>)\n          }\n        </SubMenu>\n      </Menu>\n    );\n  }\n}","import React from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\nimport prism from 'react-syntax-highlighter/dist/esm/styles/prism/prism';\n \nSyntaxHighlighter.registerLanguage('jsx', jsx);\n\nexport default (props) => {\n  return (\n    <SyntaxHighlighter \n    language={props.language || 'jsx'}\n    // useInlineStyles={false}\n     showLineNumbers={props.language==='jsx' || !props.language} style={prism}>\n      {props.code}\n    </SyntaxHighlighter>\n  );\n};","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Icon, Input, Form, Button } from 'antd';\n\nconst settings = {\n  props: {\n    layout: \"inline\"\n  },\n  fields: [\n    {\n      key: 'username',\n      component: [Input, {\n        prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n        placeholder: \"Username\"\n      }],\n      props: {\n      },\n      decorator: {\n        rules: [{ required: true, message: 'Please input your Password!' }],\n      },\n    }, {\n      key: 'password',\n      component: [Input, {\n        type: \"password\",\n        prefix: <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n        placeholder: \"Password\"\n      }],\n      decorator: {\n        rules: [{ required: true, message: 'Please input your username!' }],\n      },\n    }\n  ]\n};\n\nexport default class Example extends React.Component {\n\n  state = {\n    fields: {\n      username: {\n        // value: 'benjycui',\n      },\n      password: {\n        // value: 'password',\n      },\n    },\n  };\n\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    // this.formRef.form.validateFields();\n    console.log(this.formRef)\n  }\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.formRef.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  onFieldsChange = (changedFields, allFields) => {\n    console.log(changedFields, allFields);\n    this.setState(({ fields }) => ({\n      fields: { ...fields, ...changedFields },\n    }));\n  }\n\n  onValuesChange = (changedValues, allValues) => {\n    console.log(changedValues, allValues);\n  }\n\n  render() {\n    // const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.formRef.form;\n    const { fields } = this.state;\n\n    // Only show error after a field is touched.\n    // const usernameError = isFieldTouched('username') && getFieldError('username');\n    // const passwordError = isFieldTouched('password') && getFieldError('password');\n\n    // console.log(getFieldsError());\n    return (\n      <DynamicForm\n        wrappedComponentRef={this.saveFormRef}\n        settings={settings}\n        fields={fields}\n        onValuesChange={this.onValuesChange}\n        onFieldsChange={this.onFieldsChange}>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit}\n          // disabled={hasErrors(getFieldsError())}\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </DynamicForm>\n    );\n  }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Form, Select, Button } from 'antd';\n\nconst { Option } = Select;\n\nexport default class Example extends React.Component {\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSelectChange = value => {\n        console.log(value);\n        this.formRef.form.setFieldsValue({\n            note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\n        });\n    };\n\n    render() {\n        const settings = {\n            props: {\n                labelCol: { span: 5 },\n                wrapperCol: { span: 12 }\n            },\n            fields: [\n                {\n                    key: 'note',\n                    component: Input,\n                    props: {\n                        label: 'Note',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input your note!' }],\n                    }\n                }, {\n                    key: 'gender',\n                    component: [Select, {\n                        placeholder: \"Select a option and change input text above\",\n                        onChange: this.handleSelectChange,\n                        children: [\n                            <Option value=\"male\" key=\"male\">male</Option>,\n                            <Option value=\"female\" key=\"female\">female</Option>\n                        ]\n                    }],\n                    props: {\n                        label: 'Gender',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please select your gender!' }],\n                    }\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                wrappedComponentRef={this.saveFormRef}\n                onSubmit={this.handleSubmit}>\n                <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Form, Input, Select, Button } from 'antd';\n\nconst { Option } = Select;\n\nclass PriceInput extends React.Component {\n    handleNumberChange = e => {\n        const number = parseInt(e.target.value || 0, 10);\n        if (isNaN(number)) {\n            return;\n        }\n        this.triggerChange({ number });\n    };\n\n    handleCurrencyChange = currency => {\n        this.triggerChange({ currency });\n    };\n\n    triggerChange = changedValue => {\n        const { onChange, value } = this.props;\n        if (onChange) {\n            onChange({\n                ...value,\n                ...changedValue,\n            });\n        }\n    };\n\n    render() {\n        const { size, value } = this.props;\n        return (\n            <span>\n                <Input\n                    type=\"text\"\n                    size={size}\n                    value={value.number}\n                    onChange={this.handleNumberChange}\n                    style={{ width: '65%', marginRight: '3%' }}\n                />\n                <Select\n                    value={value.currency}\n                    size={size}\n                    style={{ width: '32%' }}\n                    onChange={this.handleCurrencyChange}\n                >\n                    <Option value=\"rmb\">RMB</Option>\n                    <Option value=\"dollar\">Dollar</Option>\n                </Select>\n            </span>\n        );\n    }\n}\n\nexport default class Example extends React.Component {\n\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    checkPrice = (rule, value, callback) => {\n        if (value.number > 0) {\n            return callback();\n        }\n        callback('Price must greater than zero!');\n    };\n\n\n    render() {\n        const settings = {\n            props: {\n                layout: \"inline\"\n            },\n            fields: [\n                {\n                    key: 'price',\n                    component: PriceInput,\n                    decorator: {\n                        initialValue: { number: 0, currency: 'rmb' },\n                        rules: [{ validator: this.checkPrice }],\n                    },\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                onSubmit={this.handleSubmit}\n            >\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Radio, Input, Form, Button } from 'antd';\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            layout: {\n                value: 'horizontal',\n            },\n        },\n    };\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    render() {\n        const { fields } = this.state;\n        const formLayout = fields.layout.value;\n        const formItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                    labelCol: { span: 4 },\n                    wrapperCol: { span: 14 },\n                }\n                : null;\n        const buttonItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                    wrapperCol: { span: 14, offset: 4 },\n                }\n                : null;\n        const settings = {\n            props: {\n                layout: formLayout\n            },\n            fields: [\n                {\n                    key: 'layout',\n                    component: [Radio.Group, {\n                        children: [\n                            <Radio.Button value=\"horizontal\">Horizontal</Radio.Button>,\n                            <Radio.Button value=\"vertical\">Vertical</Radio.Button>,\n                            <Radio.Button value=\"inline\">Inline</Radio.Button>\n                        ]\n                    }],\n                    props: {\n                        label: 'Form Layout',\n                        ...formItemLayout\n                    },\n                }, {\n                    key: 'field-a',\n                    component: [Input, {\n                        placeholder: \"input placeholder a\"\n                    }],\n                    props: {\n                        label: 'Field A',\n                        ...formItemLayout\n                    },\n                }, {\n                    key: 'field-b',\n                    component: [Input, {\n                        placeholder: \"input placeholder b\"\n                    }],\n                    props: {\n                        label: 'Field B',\n                        ...formItemLayout\n                    },\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                fields={fields}\n                settings={settings}\n                onFieldsChange={this.onFieldsChange}\n                onSubmit={this.handleSubmit}>\n                <Form.Item {...buttonItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Icon, Input, Form, Button, Checkbox } from 'antd';\nimport styles from './login.module.less';\n\nconst settings = {\n    props: {\n        // layout: \"inline\",\n        className: styles[\"login-form\"]\n    },\n    fields: [\n        {\n            key: 'username',\n            component: [Input, {\n                prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                placeholder: \"Username\"\n            }],\n            props: {\n            },\n            decorator: {\n                rules: [{ required: true, message: 'Please input your username!' }],\n            },\n        }, {\n            key: 'password',\n            component: [Input, {\n                type: \"password\",\n                prefix: <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                placeholder: \"Password\"\n            }],\n            decorator: {\n                rules: [{ required: true, message: 'Please input your Password!' }],\n            },\n        }, {\n            key: 'remember',\n            component: [Checkbox, {\n                children: 'Remember me'\n            }],\n            decorator: {\n                valuePropName: 'checked',\n                initialValue: true,\n            },\n        }\n    ]\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            username: {\n                value: '1111'\n            }\n        }\n    };\n\n    componentDidMount() {\n        console.log(this.formRef)\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.formRef.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        return (\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSubmit}\n                onValuesChange={this.onValuesChange}\n                onFieldsChange={this.onFieldsChange}\n                render={[({ remember }, fields) => <Form.Item>\n                    {fields[remember]}\n                    <a className={styles['login-form-forgot']} href=\"\">Forgot password</a>\n                </Form.Item>]}>\n                <Button type=\"primary\" htmlType=\"submit\" className={styles['login-form-button']}>\n                    Log in\n                </Button>\n                <Form.Item>\n                    Or <a href=\"\">register now!</a>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Radio, Button, Modal } from 'antd';\n\nclass CollectionCreateForm extends React.Component {\n\n    render() {\n        const { visible, onCancel, onCreate, wrappedComponentRef } = this.props;\n        const settings = {\n            props: {\n                layout: \"vertical\",\n            },\n            fields: [{\n                key: 'title',\n                component: Input,\n                props: {\n                    label: `Title`\n                },\n                decorator: {\n                    rules: [{ required: true, message: 'Please input the title of collection!' }],\n                },\n            }, {\n                key: 'description',\n                component: [Input, {\n                    type: \"textarea\"\n                }],\n                props: {\n                    label: `Description`\n                },\n            }, {\n                key: 'modifier',\n                component: [Radio.Group, {\n                    type: \"textarea\",\n                    children: [<Radio key={'public'} value=\"public\">Public</Radio>,\n                    <Radio key={'private'} value=\"private\">Private</Radio>]\n                }],\n            }]\n        };\n\n        return (\n            <Modal\n                visible={visible}\n                title=\"Create a new collection\"\n                okText=\"Create\"\n                onCancel={onCancel}\n                onOk={onCreate}\n            >\n                <DynamicForm\n                    wrappedComponentRef={wrappedComponentRef}\n                    settings={settings} />\n            </Modal>\n        );\n    }\n}\n\nexport default class Example extends React.Component {\n\n    state = {\n        visible: false,\n    };\n\n    showModal = () => {\n        this.setState({ visible: true });\n    };\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n\n    handleCreate = () => {\n        const { form } = this.formRef;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            console.log('Received values of form: ', values);\n            form.resetFields();\n            this.setState({ visible: false });\n        });\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    render() {\n        return <div>\n            <Button type=\"primary\" onClick={this.showModal}>\n                New Collection\n            </Button>\n            <CollectionCreateForm\n                wrappedComponentRef={this.saveFormRef}\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                onCreate={this.handleCreate}\n            />\n        </div>\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    AutoComplete,\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst residences = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        children: [\n            {\n                value: 'hangzhou',\n                label: 'Hangzhou',\n                children: [\n                    {\n                        value: 'xihu',\n                        label: 'West Lake',\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        children: [\n            {\n                value: 'nanjing',\n                label: 'Nanjing',\n                children: [\n                    {\n                        value: 'zhonghuamen',\n                        label: 'Zhong Hua Men',\n                    },\n                ],\n            },\n        ],\n    },\n];\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n        fields: {\n            prefix: {\n                value: '86'\n            },\n            phone: {\n                value: '',\n            }\n        }\n    };\n\n    handleWebsiteChange = value => {\n        let autoCompleteResult;\n        if (!value) {\n            autoCompleteResult = [];\n        } else {\n            autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n        }\n        this.setState({ autoCompleteResult });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        // debugger;\n        const { form } = this.formRef;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        // debugger;\n        const { form } = this.formRef;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    getWebsiteOptions = () => this.state.autoCompleteResult.map(website => (\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    componentDidMount() {\n        console.log(this.formRef)\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSubmit = (e, formRef) => {\n        e.preventDefault();\n        formRef.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        // debugger;\n        const phoneSettings = {\n            key: 'phone',\n            component: [Input, {\n                style: { width: '100%' }\n            }],\n            props: {\n                label: 'Phone Number',\n            },\n            decorator: {\n                initialValue: fields.phone.value,\n                rules: [{ required: true, message: 'Please input your phone number!' }],\n            },\n        };\n\n        const settings = {\n            props: {\n                ...formItemLayout,\n            },\n            fields: [\n                {\n                    key: 'email',\n                    component: [Input, {\n                        prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                        placeholder: \"Username\"\n                    }],\n                    hidden: true,\n                    props: {\n                        label: 'E-mail',\n                    },\n                    decorator: {\n                        rules: [\n                            { type: 'email', message: 'The input is not valid E-mail!' },\n                            { required: true, message: 'Please input your E-mail!' },\n                        ],\n                    },\n                }, {\n                    key: 'password',\n                    component: Input.Password,\n                    props: {\n                        label: 'Password',\n                        hasFeedback: true,\n                    },\n                    decorator: {\n                        rules: [\n                            { required: true, message: 'Please input your password!' },\n                            { validator: this.validateToNextPassword },\n                        ],\n                    },\n                }, {\n                    key: 'confirm',\n                    component: [Input.Password, {\n                        onBlur: this.handleConfirmBlur\n                    }],\n                    props: {\n                        label: 'Confirm Password',\n                        hasFeedback: true,\n                    },\n                    decorator: {\n                        rules: [\n                            { required: true, message: 'Please confirm your password!' },\n                            { validator: this.compareToFirstPassword },\n                        ],\n                    },\n                }, {\n                    key: 'nickname',\n                    component: Input,\n                    props: {\n                        label: <span>Nickname&nbsp;\n                            <Tooltip title=\"What do you want others to call you?\">\n                                <Icon type=\"question-circle-o\" />\n                            </Tooltip>\n                        </span>,\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n                    },\n                }, {\n                    key: 'residence',\n                    component: [Cascader, {\n                        options: residences\n                    }],\n                    props: {\n                        label: 'Habitual Residence',\n                    },\n                    decorator: {\n                        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                        rules: [\n                            { type: 'array', required: true, message: 'Please select your habitual residence!' },\n                        ],\n                    },\n                }, {\n                    key: 'prefix',\n                    component: [Select, {\n                        style: { width: 70 },\n                        children: [\n                            <Option key=\"86\" value=\"86\">+86</Option>,\n                            <Option key=\"87\" value=\"87\">+87</Option>\n                        ],\n                    }],\n                    decorator: {\n                        initialValue: \"86\"\n                    },\n                }, {\n                    key: 'website',\n                    component: [AutoComplete, {\n                        dataSource: this.getWebsiteOptions(),\n                        onChange: this.handleWebsiteChange,\n                        placeholder: \"website\"\n                    }],\n                    props: {\n                        label: 'Website'\n                    },\n                    decorator: {\n                        initialValue: \"86\"\n                    },\n                }, {\n                    key: 'captcha',\n                    component: [Input, {\n                    }],\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input the captcha you got!' }],\n                    },\n                }, {\n                    key: 'agreement',\n                    component: [Checkbox, {\n                        children: <>\n                            I have read the <a href=\"\">agreement</a>\n                        </>\n                    }],\n                    props: {\n                        ...tailFormItemLayout,\n                    },\n                    decorator: {\n                        valuePropName: 'checked'\n                    },\n                }\n            ]\n        };\n        return (\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSubmit}\n                onFieldsChange={this.onFieldsChange}\n                render={[\n                    ({ captcha }, fields) => <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n                        <Row gutter={8}>\n                            <Col span={12}>\n                                {fields[captcha]}\n                            </Col>\n                            <Col span={12}>\n                                <Button>Get captcha</Button>\n                            </Col>\n                        </Row>\n                    </Form.Item>,\n                    ({ prefix }, fields, ref) => <Form.Item {...phoneSettings.props}>\n                        {ref.form.getFieldDecorator(phoneSettings.key, phoneSettings.decorator)(<Input {...phoneSettings.component[1]} addonBefore={fields[prefix]} />)}\n                    </Form.Item>\n                ]}>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Row, Col, Icon, Input, Form, Button, Checkbox } from 'antd';\nimport styles from './search.module.less';\n\nexport default class Example extends React.Component {\n\n    state = {\n        expand: false,\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleReset = () => {\n        this.formRef.form.resetFields();\n    };\n\n    handleSearch = e => {\n        e.preventDefault();\n        this.formRef.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    toggle = () => {\n        const { expand } = this.state;\n        this.setState({ expand: !expand });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        const count = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        const settings = {\n            props: {\n                layout: 'horizontal',\n                className: styles[\"ant-advanced-search-form\"]\n            },\n            fields: count.map((idx) => ({\n                key: `field-${idx}`,\n                component: [Input, {\n                    placeholder: \"placeholder\"\n                }],\n                hidden: this.state.expand && idx > 5,\n                props: {\n                    label: `Field ${idx}`\n                },\n                decorator: {\n                    rules: [{ required: true, message: 'Input something!' }],\n                },\n            }))\n        };\n\n        return (<>\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSearch}\n                onValuesChange={this.onValuesChange}\n                onFieldsChange={this.onFieldsChange}\n                render={(keys, fields, _, fieldMap) => <Row gutter={24}>{\n                    Object.keys(keys).map((name) => <Col span={8} key={name}>\n                        <Form.Item {...fieldMap[name].props}>\n                            {fields[name]}\n                        </Form.Item>\n                    </Col>)\n                }</Row>}>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Search\n                        </Button>\n                        <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n                            Clear\n                        </Button>\n                        <a style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n                            Collapse <Icon type={this.state.expand ? 'down' : 'up'} />\n                        </a>\n                    </Col>\n                </Row>\n            </DynamicForm>\n            <div className={styles['search-result-list']}>Search Result List</div>\n        </>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Form, DatePicker, TimePicker, Button } from 'antd';\n\nconst { MonthPicker, RangePicker } = DatePicker;\n\nexport default class Example extends React.Component {\n\n    // state = {};\n\n    handleSubmit = (e, formRef) => {\n        e.preventDefault();\n        formRef.validateFields((err, fieldsValue) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n\n            console.log('Received values of form: ', fieldsValue);\n            // Should format date value before submit.\n            const rangeValue = fieldsValue['range-picker'];\n            const rangeTimeValue = fieldsValue['range-time-picker'];\n            const values = {\n                ...fieldsValue,\n                'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n                'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n                'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n                'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n                'range-time-picker': [\n                    rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\n                    rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\n                ],\n                'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\n            };\n            console.log('Received values of form: ', values);\n        });\n    };\n\n    // onFieldsChange = (changedFields, allFields) => {\n    //     console.log(changedFields, allFields);\n    //     this.setState(({ fields }) => ({\n    //         fields: { ...fields, ...changedFields },\n    //     }));\n    // }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n        const config = {\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n        };\n        const rangeConfig = {\n            rules: [{ type: 'array', required: true, message: 'Please select time!' }],\n        };\n\n        const settings = {\n            props: {\n                ...formItemLayout\n            },\n            fields: [{\n                key: 'date-picker',\n                component: DatePicker,\n                props: {\n                    label: 'DatePicker'\n                },\n                decorator: config,\n            },{\n                key: 'date-time-picker',\n                component: [DatePicker, {\n                    showTime: true,\n                    format: \"YYYY-MM-DD HH:mm:ss\"\n                }],\n                props: {\n                    label: 'DatePicker[showTime]'\n                },\n                decorator: config,\n            },{\n                key: 'month-picker',\n                component: MonthPicker,\n                props: {\n                    label: 'MonthPicker'\n                },\n                decorator: config,\n            },{\n                key: 'range-picker',\n                component: RangePicker,\n                props: {\n                    label: 'RangePicker'\n                },\n                decorator: rangeConfig,\n            },{\n                key: 'range-time-picker',\n                component: [RangePicker, {\n                    showTime: true,\n                    format: \"YYYY-MM-DD HH:mm:ss\"\n                }],\n                props: {\n                    label: 'RangePicker[showTime]'\n                },\n                decorator: rangeConfig,\n            },{\n                key: 'time-picker',\n                component: TimePicker,\n                props: {\n                    label: 'TimePicker'\n                },\n                decorator: config,\n            }]\n        };\n\n        // const { fields } = this.state;\n        return (<>\n            <DynamicForm\n                settings={settings}\n                onSubmit={this.handleSubmit}\n                // fields={fields}\n                // onFieldsChange={this.onFieldsChange}\n                >\n                <Form.Item wrapperCol={{\n                    xs: { span: 24, offset: 0 },\n                    sm: { span: 16, offset: 8 },\n                }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        </>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport ExampleList from './components/example-list';\nimport CodeView from './components/codeview.jsx';\nimport { Menu, Icon, Layout } from 'antd';\nimport codegen from 'babel-plugin-codegen/macro'\n\nimport BasicExample from './components/form/example/basic';\nimport CascadeExample from './components/form/example/cascade';\nimport CustomExample from './components/form/example/custom';\nimport DynamicRuleExample from './components/form/example/dynamicRule';\nimport LayoutExample from './components/form/example/layout';\nimport LoginExample from './components/form/example/login';\nimport ModalExample from './components/form/example/modal';\nimport RegisterExample from './components/form/example/register';\nimport SearchExample from './components/form/example/search';\nimport TimeExample from './components/form/example/time';\n\nimport Markdown from 'react-markdown';\n\nconst datas = [\n//   {\n//   label: '文档',\n//   menus: [{\n//     label: 'README',\n//     language: 'markdown',\n//     source: codegen.require('./transform/readPath', 'README.md')\n//   }],\n// }, \n{\n  label: '通用',\n  menus: [{\n    label: '内联登录栏',\n    Component: BasicExample,\n    source: codegen.require('./transform/readFileSync', 'basic')\n  },\n  {\n    label: '登录框',\n    Component: LoginExample,\n    source: codegen.require('./transform/readFileSync', 'login')\n  },\n  {\n    label: '注册新用户',\n    Component: RegisterExample,\n    source: codegen.require('./transform/readFileSync', 'register')\n  },\n  {\n    label: '高级搜索',\n    Component: SearchExample,\n    source: codegen.require('./transform/readFileSync', 'search')\n  },\n  {\n    label: '弹出层中表单',\n    Component: ModalExample,\n    source: codegen.require('./transform/readFileSync', 'modal')\n  },\n  {\n    label: '时间类控件',\n    Component: TimeExample,\n    source: codegen.require('./transform/readFileSync', 'time')\n  },\n  {\n    label: '自定义表单控件',\n    Component: CustomExample,\n    source: codegen.require('./transform/readFileSync', 'custom')\n  },\n  {\n    label: '表单联动',\n    Component: CascadeExample,\n    source: codegen.require('./transform/readFileSync', 'cascade')\n  },\n  {\n    label: '表单布局',\n    Component: LayoutExample,\n    source: codegen.require('./transform/readFileSync', 'layout')\n  },\n  {\n    label: '动态校验规则',\n    Component: DynamicRuleExample,\n    source: codegen.require('./transform/readFileSync', 'dynamicRule')\n  }]\n}\n// , {\n//   label: '自定义渲染',\n//   menus: [{\n//     label: '表单'\n//   }]\n// }\n];\n\nconst ComponentMap = datas.reduce((map, category) => {\n  category.menus.forEach(m => {\n    map[m.label] = m;\n    ;\n  });\n  return map;\n}, {});\n\nconst { Header, Content, Sider } = Layout;\n\nexport default class Main extends React.Component {\n\n  state = {\n    selectedKey: '内联登录栏'\n  }\n  onSelect = (selectedKey) => {\n    this.setState({\n      selectedKey\n    })\n  }\n  render() {\n\n    const { selectedKey } = this.state;\n    const {source, language, Component} = ComponentMap[selectedKey];\n\n    console.log(source);\n    \n    return (\n      <Layout style={{ height: '100vh', background: '#fff' }}>\n        <Header style={{ background: '#fff', height: '48px' }}>\n          <Menu mode=\"horizontal\">\n            <Menu.Item key=\"alipay\">\n              <a href=\"https://github.com/Derek-Hu/rc-form-dynamic\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Icon type=\"github\" />\n                Github\n              </a>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Layout >\n          <Sider><ExampleList datas={datas} onSelect={this.onSelect} /></Sider>\n          {\n            source ? <Content className=\"elements-container\" style={{ width: '60%', background: '#fff' }}>{\n              selectedKey==='README'? <Markdown source={source} /> : <CodeView code={source} language={language} />\n            }</Content>: null\n          }\n          \n          {\n            Component ? <Layout style={{ width: '40%', padding: '1em 2em', background: '#FFF' }}>\n            <Content style={{ background: '#fff' }} ><Component /></Content>\n          </Layout> : null\n          }\n          \n        </Layout>\n      </Layout>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Example from './Example';\n\nReactDOM.render(<Example />, document.getElementById('root'));\n"],"sourceRoot":""}