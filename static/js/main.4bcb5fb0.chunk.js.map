{"version":3,"sources":["components/form/example/login.module.less","components/form/example/search.module.less","components/example-list.jsx","components/codeview.jsx","rc-form-dynamic/index.js","components/form/example/basic.js","components/form/example/cascade.js","components/form/example/custom.js","components/form/example/dynamicRule.js","components/form/example/layout.js","components/form/example/login.js","components/form/example/modal.js","components/form/example/register.js","components/form/example/search.js","components/form/example/time.js","Example.js","index.js"],"names":["module","exports","SubMenu","Menu","Sider","onSelect","item","key","keyPath","selectedKeys","domEvent","console","log","props","datas","this","style","height","width","textAlign","defaultSelectedKeys","defaultOpenKeys","mode","title","map","ItemGroup","label","menus","m","Item","name","React","Component","SyntaxHighlighter","registerLanguage","jsx","language","showLineNumbers","prism","code","Form","create","onFieldsChange","changedFields","allFields","form","mapPropsToFields","fields","settings","formData","allKeys","reduce","allKey","field","Object","keys","formFields","fieldData","createFormField","value","onValuesChange","changedValues","allValues","forwardRef","ref","useImperativeHandle","fromProps","render","children","onSubmit","length","error","keyArgs","FieldInstances","batchKeys","currentBatchNumber","FormFieldsGetter","totalKey","defineProperty","get","FieldMap","forEach","hidden","parentProps","getFieldDecorator","component","decorator","Array","isArray","componentProps","renderField","push","interceptors","filter","child","CustomItems","interceptor","index","customs","cloneElement","batchKeyGraph","graph","batchIndex","batch","args","allInterceptorKeys","concat","formItems","indexOf","batchKey","submitProps","e","layout","Input","prefix","type","color","placeholder","rules","required","message","Example","state","username","password","saveFormRef","formRef","handleSubmit","preventDefault","validateFields","err","values","setState","wrappedComponentRef","htmlType","onClick","Option","Select","handleSelectChange","setFieldsValue","note","labelCol","span","wrapperCol","onChange","offset","PriceInput","handleNumberChange","number","parseInt","target","isNaN","triggerChange","handleCurrencyChange","currency","changedValue","size","marginRight","checkPrice","rule","callback","initialValue","validator","formItemLayout","formTailLayout","checkNick","info","_","__","setTimeout","force","options","Checkbox","valuePropName","allowClear","option","formLayout","buttonItemLayout","Radio","Group","Button","className","styles","remember","href","CollectionCreateForm","visible","onCancel","onCreate","okText","onOk","showModal","handleCancel","handleCreate","resetFields","AutoCompleteOption","AutoComplete","residences","xs","sm","tailFormItemLayout","confirmDirty","autoCompleteResult","phone","handleWebsiteChange","domain","compareToFirstPassword","getFieldValue","validateToNextPassword","handleConfirmBlur","getWebsiteOptions","website","phoneSettings","Password","hasFeedback","onBlur","whitespace","Cascader","dataSource","captcha","extra","gutter","addonBefore","expand","handleReset","handleSearch","toggle","idx","fieldMap","marginLeft","fontSize","MonthPicker","DatePicker","RangePicker","fieldsValue","rangeValue","rangeTimeValue","format","config","rangeConfig","showTime","TimePicker","BasicExample","source","LoginExample","RegisterExample","SearchExample","ModalExample","TimeExample","CustomExample","CascadeExample","LayoutExample","DynamicRuleExample","ComponentMap","category","Header","Layout","Content","Main","selectedKey","background","rel","padding","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4bcb5fb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.module.05857f04.less\";","module.exports = __webpack_public_path__ + \"static/media/search.module.d6ed3297.less\";","import React from 'react';\nimport { Menu } from 'antd';\n\nconst { SubMenu } = Menu;\n\nexport default class Sider extends React.Component {\n  onSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\n    console.log('click ', { item, key, keyPath, selectedKeys, domEvent });\n    this.props.onSelect && this.props.onSelect(key);\n  };\n\n  render() {\n    const {datas} = this.props;\n\n    return (\n      <Menu\n        onSelect={this.onSelect}\n        style={{ height:'100%', width: '100%', textAlign:'left' }}\n        defaultSelectedKeys={['README']}\n        defaultOpenKeys={['sub1']}\n        mode=\"inline\"\n        // theme=\"dark\"\n      >\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <span>rc-dynamic-form</span>\n            </span>\n          }\n        >\n          {\n            datas.map(item => <Menu.ItemGroup key={item.label} title={item.label}>\n              {\n                item.menus.map(m => <Menu.Item key={m.label}>{m.name}&nbsp;{m.label}</Menu.Item>)\n              }\n            </Menu.ItemGroup>)\n          }\n        </SubMenu>\n      </Menu>\n    );\n  }\n}","import React from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\nimport prism from 'react-syntax-highlighter/dist/esm/styles/prism/prism';\n \nSyntaxHighlighter.registerLanguage('jsx', jsx);\n\nexport default (props) => {\n  return (\n    <SyntaxHighlighter \n    language={props.language || 'jsx'}\n    // useInlineStyles={false}\n     showLineNumbers={props.language==='jsx' || !props.language} style={prism}>\n      {props.code}\n    </SyntaxHighlighter>\n  );\n};","import React, { forwardRef, useImperativeHandle } from 'react';\nimport { Form } from 'antd';\n\nconst ComponentName = 'DynamicForm';\nconst renderField = (field, parentProps) => {\n  const { getFieldDecorator } = parentProps.form;\n  const { key, component, decorator } = field;\n  const [Component, componentProps] = Array.isArray(component) ? component : [component];\n  const { children } = componentProps || {};\n  return getFieldDecorator(key, decorator)(<Component {...componentProps}>{children}</Component>);\n}\n\nexport default Form.create({\n  onFieldsChange(props, changedFields, allFields) {\n    props.onFieldsChange && props.onFieldsChange(changedFields, allFields, props.form);\n  },\n  mapPropsToFields(props) {\n    const { settings: { fields } } = props;\n    const formData = props.fields;\n    if (!formData || !fields) {\n      return;\n    }\n    const allKeys = fields.reduce((allKey, field)=> {\n      allKey[field.key] = true;\n      return allKey;\n    }, {});\n    return Object.keys(formData).reduce((formFields, key)=>{\n      if(key in allKeys){\n        const fieldData = formData[key];\n        formFields[key] = Form.createFormField({\n          ...fieldData,\n          value: fieldData && fieldData.value,\n        });\n      }\n      return formFields;\n    }, {});\n  },\n  onValuesChange(props, changedValues, allValues) {\n    props.onValuesChange && props.onValuesChange(changedValues, allValues, props.form);\n  },\n})(forwardRef((props, ref) => {\n\n  useImperativeHandle(ref, () => ({\n    form: props.form,\n  }));\n\n  const { settings: { props: fromProps, fields }, render, children, onSubmit, onFieldsChange, fields: formData } = props;\n\n  if (!fields || !fields.length) {\n    return null;\n  }\n\n  if(onFieldsChange && !formData){\n    console.error(`Missing prop 'fields' when 'onFieldsChange' exists in <${ComponentName} onFieldsChange={() => {}} fields={}/>`)\n  }\n  const keyArgs = {};\n  const FieldInstances = {};\n  const batchKeys = {};\n  let currentBatchNumber = -1;\n  const FormFieldsGetter = {};\n  const totalKey = {};\n\n  Object.defineProperty(FormFieldsGetter, 'undefined', {\n    get: function () {\n      console.error(`Key not match in render params: <${ComponentName} render={[({key}, fields) => Component ]} />`)\n      return null;\n    }\n  });\n\n  const FieldMap = {};\n  fields.forEach(field => {\n    if (field.hidden) {\n      return;\n    }\n    const key = field.key;\n    if (key in totalKey) {\n      console.error(`Duplicate Key '${key}' props settings, <${ComponentName} settings={settings} />`)\n      return;\n    }\n    FieldMap[key] = field;\n    totalKey[key] = true;\n    FieldInstances[key] = renderField(field, props);\n    keyArgs[key] = key;\n    Object.defineProperty(FormFieldsGetter, key, {\n      get: function () {\n        if (!batchKeys[currentBatchNumber]) {\n          batchKeys[currentBatchNumber] = [];\n        }\n        batchKeys[currentBatchNumber].push(key);\n        return FieldInstances[key];\n      }\n    });\n  });\n\n  const interceptors = (Array.isArray(render) ? render : [render]).filter(child => typeof child === 'function');\n  const CustomItems = interceptors && interceptors.length ? interceptors.map((interceptor, index) => {\n    currentBatchNumber = index;\n    const customs = interceptor(keyArgs, FormFieldsGetter, props, FieldMap);\n    if (!customs) {\n      console.error(`Should return Component: <${ComponentName} render={[({key}, fields) => Component]} />`);\n      return null;\n    }\n    return React.cloneElement(customs, { key: `batch_${index}` });\n  }) : null;\n\n  const batchKeyGraph = Object.keys(batchKeys).reduce((graph, batchIndex) => {\n    const batch = batchKeys[batchIndex];\n    if (!graph[batch[0]]) {\n      graph[batch[0]] = [];\n    }\n    graph[batch[0]].push({ index: batchIndex, args: batch });\n    return graph;\n  }, {});\n\n  const allInterceptorKeys = Object.keys(batchKeys).reduce((allKeys, index) => {\n    return allKeys.concat(batchKeys[index]);\n  }, []);\n\n  const formItems = fields.map((field) => {\n    const { key, props } = field;\n    if (!totalKey[key]) {\n      return null;\n    }\n    if (allInterceptorKeys.indexOf(key) === -1) {\n      return <Form.Item {...props} key={key}>{FieldInstances[key]}</Form.Item>;\n    }\n    if ((key in batchKeyGraph)) {\n      return batchKeyGraph[key].map(batch => {\n        batch.args.forEach(batchKey => {\n          totalKey[batchKey] = false;\n        });\n        return CustomItems[batch.index];\n      });\n    }\n  });\n  const submitProps = {};\n  if(onSubmit){\n    submitProps.onSubmit = (e) => onSubmit(e, props.form);\n  }\n  return <Form {...fromProps} {...submitProps}>{formItems}{children}</Form>;\n}));","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Icon, Input, Form, Button } from 'antd';\n\nconst settings = {\n  props: {\n    layout: \"inline\"\n  },\n  fields: [\n    {\n      key: 'username',\n      component: [Input, {\n        prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n        placeholder: \"Username\"\n      }],\n      props: {\n      },\n      decorator: {\n        rules: [{ required: true, message: 'Please input your Password!' }],\n      },\n    }, {\n      key: 'password',\n      component: [Input, {\n        type: \"password\",\n        prefix: <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n        placeholder: \"Password\"\n      }],\n      decorator: {\n        rules: [{ required: true, message: 'Please input your username!' }],\n      },\n    }\n  ]\n};\n\nexport default class Example extends React.Component {\n\n  state = {\n    fields: {\n      username: {\n        // value: 'benjycui',\n      },\n      password: {\n        // value: 'password',\n      },\n    },\n  };\n\n  componentDidMount() {\n    // To disable submit button at the beginning.\n    // this.formRef.form.validateFields();\n    console.log(this.formRef)\n  }\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.formRef.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  onFieldsChange = (changedFields, allFields) => {\n    console.log(changedFields, allFields);\n    this.setState(({ fields }) => ({\n      fields: { ...fields, ...changedFields },\n    }));\n  }\n\n  onValuesChange = (changedValues, allValues) => {\n    console.log(changedValues, allValues);\n  }\n\n  render() {\n    // const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.formRef.form;\n    const { fields } = this.state;\n\n    // Only show error after a field is touched.\n    // const usernameError = isFieldTouched('username') && getFieldError('username');\n    // const passwordError = isFieldTouched('password') && getFieldError('password');\n\n    // console.log(getFieldsError());\n    return (\n      <DynamicForm\n        wrappedComponentRef={this.saveFormRef}\n        settings={settings}\n        fields={fields}\n        onValuesChange={this.onValuesChange}\n        onFieldsChange={this.onFieldsChange}>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit}\n          // disabled={hasErrors(getFieldsError())}\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </DynamicForm>\n    );\n  }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Form, Select, Button } from 'antd';\n\nconst { Option } = Select;\n\nexport default class Example extends React.Component {\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSelectChange = value => {\n        console.log(value);\n        this.formRef.form.setFieldsValue({\n            note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\n        });\n    };\n\n    render() {\n        const settings = {\n            props: {\n                labelCol: { span: 5 },\n                wrapperCol: { span: 12 }\n            },\n            fields: [\n                {\n                    key: 'note',\n                    component: Input,\n                    props: {\n                        label: 'Note',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input your note!' }],\n                    }\n                }, {\n                    key: 'gender',\n                    component: [Select, {\n                        placeholder: \"Select a option and change input text above\",\n                        onChange: this.handleSelectChange,\n                        children: [\n                            <Option value=\"male\" key=\"male\">male</Option>,\n                            <Option value=\"female\" key=\"female\">female</Option>\n                        ]\n                    }],\n                    props: {\n                        label: 'Gender',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please select your gender!' }],\n                    }\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                wrappedComponentRef={this.saveFormRef}\n                onSubmit={this.handleSubmit}>\n                <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Form, Input, Select, Button } from 'antd';\n\nconst { Option } = Select;\n\nclass PriceInput extends React.Component {\n    handleNumberChange = e => {\n        const number = parseInt(e.target.value || 0, 10);\n        if (isNaN(number)) {\n            return;\n        }\n        this.triggerChange({ number });\n    };\n\n    handleCurrencyChange = currency => {\n        this.triggerChange({ currency });\n    };\n\n    triggerChange = changedValue => {\n        const { onChange, value } = this.props;\n        if (onChange) {\n            onChange({\n                ...value,\n                ...changedValue,\n            });\n        }\n    };\n\n    render() {\n        const { size, value } = this.props;\n        return (\n            <span>\n                <Input\n                    type=\"text\"\n                    size={size}\n                    value={value.number}\n                    onChange={this.handleNumberChange}\n                    style={{ width: '65%', marginRight: '3%' }}\n                />\n                <Select\n                    value={value.currency}\n                    size={size}\n                    style={{ width: '32%' }}\n                    onChange={this.handleCurrencyChange}\n                >\n                    <Option value=\"rmb\">RMB</Option>\n                    <Option value=\"dollar\">Dollar</Option>\n                </Select>\n            </span>\n        );\n    }\n}\n\nexport default class Example extends React.Component {\n\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    checkPrice = (rule, value, callback) => {\n        if (value.number > 0) {\n            return callback();\n        }\n        callback('Price must greater than zero!');\n    };\n\n\n    render() {\n        const settings = {\n            props: {\n                layout: \"inline\"\n            },\n            fields: [\n                {\n                    key: 'price',\n                    component: PriceInput,\n                    decorator: {\n                        initialValue: { number: 0, currency: 'rmb' },\n                        rules: [{ validator: this.checkPrice }],\n                    },\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                onSubmit={this.handleSubmit}\n            >\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Form, Button, Checkbox, Select } from 'antd';\n\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 8 },\n};\nconst formTailLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 8, offset: 4 },\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            checkNick: {\n                value: true,\n            }\n        }\n    };\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.info('success', values);\n            }else{\n                console.error(err);\n            }\n        });\n    };\n    \n    onValuesChange=(_, __, form) => {\n        setTimeout(()=>{\n            form.validateFields(['nickname'], {force: true});\n        });\n    }\n    \n    onFieldsChange = (changedFields) => {\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n    \n    render() {\n        const { fields } = this.state;\n        const options = fields.checkNick.value ? ['male', 'female'] : ['male', 'female', 'others']\n        const settings = {\n            fields: [\n                {\n                    key: 'username',\n                    component: [Input, {\n                        placeholder: 'Please input your name',\n                    }],\n                    props: {\n                        label: \"Name\",\n                        ...formItemLayout,\n                    },\n                    decorator: {\n                        rules: [\n                            {\n                                required: true,\n                                message: 'Please input your name',\n                            },\n                        ],\n                    }\n                }, {\n                    key: 'nickname',\n                    component: [Input, {\n                        placeholder: 'Please input your nickname',\n                    }],\n                    props: {\n                        label: \"Nickname\",\n                        ...formItemLayout,\n                    },\n                    decorator: {\n                        rules: [\n                            {\n                                required: fields.checkNick.value,\n                                message: 'Please input your nickname',\n                            },\n                        ],\n                    }\n                }, {\n                    key: 'checkNick',\n                    component: [Checkbox, {\n                        children: 'Nickname is required',\n                    }],\n                    props: {\n                        ...formTailLayout\n                    },\n                    decorator: {\n                        valuePropName: 'checked',\n                    }\n                }, {\n                    key: 'gender',\n                    component: [Select, {\n                        allowClear: true,\n                        placeholder: \"Select a option and change input text above\",\n                        onChange: this.handleSelectChange,\n                        children: options.map(option => <Option key={option} value={option} >{option}</Option>)\n                    }],\n                    props: {\n                        ...formItemLayout,\n                        label: 'Gender',\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please select your gender!' }],\n                    }\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                settings={settings}\n                fields={fields}\n                onFieldsChange={this.onFieldsChange}\n                onValuesChange={this.onValuesChange}\n                onSubmit={this.handleSubmit}>\n                <Form.Item {...formTailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Check\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Radio, Input, Form, Button } from 'antd';\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            layout: {\n                value: 'horizontal',\n            },\n        },\n    };\n\n    handleSubmit = (e, form) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    render() {\n        const { fields } = this.state;\n        const formLayout = fields.layout.value;\n        const formItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                    labelCol: { span: 4 },\n                    wrapperCol: { span: 14 },\n                }\n                : null;\n        const buttonItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                    wrapperCol: { span: 14, offset: 4 },\n                }\n                : null;\n        const settings = {\n            props: {\n                layout: formLayout\n            },\n            fields: [\n                {\n                    key: 'layout',\n                    component: [Radio.Group, {\n                        children: [\n                            <Radio.Button value=\"horizontal\">Horizontal</Radio.Button>,\n                            <Radio.Button value=\"vertical\">Vertical</Radio.Button>,\n                            <Radio.Button value=\"inline\">Inline</Radio.Button>\n                        ]\n                    }],\n                    props: {\n                        label: 'Form Layout',\n                        ...formItemLayout\n                    },\n                }, {\n                    key: 'field-a',\n                    component: [Input, {\n                        placeholder: \"input placeholder a\"\n                    }],\n                    props: {\n                        label: 'Field A',\n                        ...formItemLayout\n                    },\n                }, {\n                    key: 'field-b',\n                    component: [Input, {\n                        placeholder: \"input placeholder b\"\n                    }],\n                    props: {\n                        label: 'Field B',\n                        ...formItemLayout\n                    },\n                }\n            ]\n        };\n\n        return (\n            <DynamicForm\n                fields={fields}\n                settings={settings}\n                onFieldsChange={this.onFieldsChange}\n                onSubmit={this.handleSubmit}>\n                <Form.Item {...buttonItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Icon, Input, Form, Button, Checkbox } from 'antd';\nimport styles from './login.module.less';\n\nconst settings = {\n    props: {\n        // layout: \"inline\",\n        className: styles[\"login-form\"]\n    },\n    fields: [\n        {\n            key: 'username',\n            component: [Input, {\n                prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                placeholder: \"Username\"\n            }],\n            props: {\n            },\n            decorator: {\n                rules: [{ required: true, message: 'Please input your username!' }],\n            },\n        }, {\n            key: 'password',\n            component: [Input, {\n                type: \"password\",\n                prefix: <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                placeholder: \"Password\"\n            }],\n            decorator: {\n                rules: [{ required: true, message: 'Please input your Password!' }],\n            },\n        }, {\n            key: 'remember',\n            component: [Checkbox, {\n                children: 'Remember me'\n            }],\n            decorator: {\n                valuePropName: 'checked',\n                initialValue: true,\n            },\n        }\n    ]\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        fields: {\n            username: {\n                value: '1111'\n            }\n        }\n    };\n\n    componentDidMount() {\n        console.log(this.formRef)\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.formRef.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        return (\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSubmit}\n                onValuesChange={this.onValuesChange}\n                onFieldsChange={this.onFieldsChange}\n                render={[({ remember }, fields) => <Form.Item>\n                    {fields[remember]}\n                    <a className={styles['login-form-forgot']} href=\"\">Forgot password</a>\n                </Form.Item>]}>\n                <Button type=\"primary\" htmlType=\"submit\" className={styles['login-form-button']}>\n                    Log in\n                </Button>\n                <Form.Item>\n                    Or <a href=\"\">register now!</a>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Input, Radio, Button, Modal } from 'antd';\n\nclass CollectionCreateForm extends React.Component {\n\n    render() {\n        const { visible, onCancel, onCreate, wrappedComponentRef } = this.props;\n        const settings = {\n            props: {\n                layout: \"vertical\",\n            },\n            fields: [{\n                key: 'title',\n                component: Input,\n                props: {\n                    label: `Title`\n                },\n                decorator: {\n                    rules: [{ required: true, message: 'Please input the title of collection!' }],\n                },\n            }, {\n                key: 'description',\n                component: [Input, {\n                    type: \"textarea\"\n                }],\n                props: {\n                    label: `Description`\n                },\n            }, {\n                key: 'modifier',\n                component: [Radio.Group, {\n                    type: \"textarea\",\n                    children: [<Radio key={'public'} value=\"public\">Public</Radio>,\n                    <Radio key={'private'} value=\"private\">Private</Radio>]\n                }],\n            }]\n        };\n\n        return (\n            <Modal\n                visible={visible}\n                title=\"Create a new collection\"\n                okText=\"Create\"\n                onCancel={onCancel}\n                onOk={onCreate}\n            >\n                <DynamicForm\n                    wrappedComponentRef={wrappedComponentRef}\n                    settings={settings} />\n            </Modal>\n        );\n    }\n}\n\nexport default class Example extends React.Component {\n\n    state = {\n        visible: false,\n    };\n\n    showModal = () => {\n        this.setState({ visible: true });\n    };\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n\n    handleCreate = () => {\n        const { form } = this.formRef;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            console.log('Received values of form: ', values);\n            form.resetFields();\n            this.setState({ visible: false });\n        });\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    render() {\n        return <div>\n            <Button type=\"primary\" onClick={this.showModal}>\n                New Collection\n            </Button>\n            <CollectionCreateForm\n                wrappedComponentRef={this.saveFormRef}\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                onCreate={this.handleCreate}\n            />\n        </div>\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    AutoComplete,\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst residences = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        children: [\n            {\n                value: 'hangzhou',\n                label: 'Hangzhou',\n                children: [\n                    {\n                        value: 'xihu',\n                        label: 'West Lake',\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        children: [\n            {\n                value: 'nanjing',\n                label: 'Nanjing',\n                children: [\n                    {\n                        value: 'zhonghuamen',\n                        label: 'Zhong Hua Men',\n                    },\n                ],\n            },\n        ],\n    },\n];\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nexport default class Example extends React.Component {\n\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n        fields: {\n            prefix: {\n                value: '86'\n            },\n            phone: {\n                value: '',\n            }\n        }\n    };\n\n    handleWebsiteChange = value => {\n        let autoCompleteResult;\n        if (!value) {\n            autoCompleteResult = [];\n        } else {\n            autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n        }\n        this.setState({ autoCompleteResult });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        // debugger;\n        const { form } = this.formRef;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        // debugger;\n        const { form } = this.formRef;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    getWebsiteOptions = () => this.state.autoCompleteResult.map(website => (\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    componentDidMount() {\n        console.log(this.formRef)\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleSubmit = (e, formRef) => {\n        e.preventDefault();\n        formRef.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        // debugger;\n        const phoneSettings = {\n            key: 'phone',\n            component: [Input, {\n                style: { width: '100%' }\n            }],\n            props: {\n                label: 'Phone Number',\n            },\n            decorator: {\n                initialValue: fields.phone.value,\n                rules: [{ required: true, message: 'Please input your phone number!' }],\n            },\n        };\n\n        const settings = {\n            props: {\n                ...formItemLayout,\n            },\n            fields: [\n                {\n                    key: 'email',\n                    component: [Input, {\n                        prefix: <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />,\n                        placeholder: \"Username\"\n                    }],\n                    hidden: true,\n                    props: {\n                        label: 'E-mail',\n                    },\n                    decorator: {\n                        rules: [\n                            { type: 'email', message: 'The input is not valid E-mail!' },\n                            { required: true, message: 'Please input your E-mail!' },\n                        ],\n                    },\n                }, {\n                    key: 'password',\n                    component: Input.Password,\n                    props: {\n                        label: 'Password',\n                        hasFeedback: true,\n                    },\n                    decorator: {\n                        rules: [\n                            { required: true, message: 'Please input your password!' },\n                            { validator: this.validateToNextPassword },\n                        ],\n                    },\n                }, {\n                    key: 'confirm',\n                    component: [Input.Password, {\n                        onBlur: this.handleConfirmBlur\n                    }],\n                    props: {\n                        label: 'Confirm Password',\n                        hasFeedback: true,\n                    },\n                    decorator: {\n                        rules: [\n                            { required: true, message: 'Please confirm your password!' },\n                            { validator: this.compareToFirstPassword },\n                        ],\n                    },\n                }, {\n                    key: 'nickname',\n                    component: Input,\n                    props: {\n                        label: <span>Nickname&nbsp;\n                            <Tooltip title=\"What do you want others to call you?\">\n                                <Icon type=\"question-circle-o\" />\n                            </Tooltip>\n                        </span>,\n                    },\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n                    },\n                }, {\n                    key: 'residence',\n                    component: [Cascader, {\n                        options: residences\n                    }],\n                    props: {\n                        label: 'Habitual Residence',\n                    },\n                    decorator: {\n                        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                        rules: [\n                            { type: 'array', required: true, message: 'Please select your habitual residence!' },\n                        ],\n                    },\n                }, {\n                    key: 'prefix',\n                    component: [Select, {\n                        style: { width: 70 },\n                        children: [\n                            <Option key=\"86\" value=\"86\">+86</Option>,\n                            <Option key=\"87\" value=\"87\">+87</Option>\n                        ],\n                    }],\n                    decorator: {\n                        initialValue: \"86\"\n                    },\n                }, {\n                    key: 'website',\n                    component: [AutoComplete, {\n                        dataSource: this.getWebsiteOptions(),\n                        onChange: this.handleWebsiteChange,\n                        placeholder: \"website\"\n                    }],\n                    props: {\n                        label: 'Website'\n                    },\n                    decorator: {\n                        initialValue: \"86\"\n                    },\n                }, {\n                    key: 'captcha',\n                    component: [Input, {\n                    }],\n                    decorator: {\n                        rules: [{ required: true, message: 'Please input the captcha you got!' }],\n                    },\n                }, {\n                    key: 'agreement',\n                    component: [Checkbox, {\n                        children: <>\n                            I have read the <a href=\"\">agreement</a>\n                        </>\n                    }],\n                    props: {\n                        ...tailFormItemLayout,\n                    },\n                    decorator: {\n                        valuePropName: 'checked'\n                    },\n                }\n            ]\n        };\n        return (\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSubmit}\n                onFieldsChange={this.onFieldsChange}\n                render={[\n                    ({ captcha }, fields) => <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n                        <Row gutter={8}>\n                            <Col span={12}>\n                                {fields[captcha]}\n                            </Col>\n                            <Col span={12}>\n                                <Button>Get captcha</Button>\n                            </Col>\n                        </Row>\n                    </Form.Item>,\n                    ({ prefix }, fields, ref) => <Form.Item {...phoneSettings.props}>\n                        {ref.form.getFieldDecorator(phoneSettings.key, phoneSettings.decorator)(<Input {...phoneSettings.component[1]} addonBefore={fields[prefix]} />)}\n                    </Form.Item>\n                ]}>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Row, Col, Icon, Input, Form, Button, Checkbox } from 'antd';\nimport styles from './search.module.less';\n\nexport default class Example extends React.Component {\n\n    state = {\n        expand: false,\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleReset = () => {\n        this.formRef.form.resetFields();\n    };\n\n    handleSearch = e => {\n        e.preventDefault();\n        this.formRef.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    toggle = () => {\n        const { expand } = this.state;\n        this.setState({ expand: !expand });\n    };\n\n    onFieldsChange = (changedFields, allFields) => {\n        console.log(changedFields, allFields);\n        this.setState(({ fields }) => ({\n            fields: { ...fields, ...changedFields },\n        }));\n    }\n\n    onValuesChange = (changedValues, allValues) => {\n        console.log(changedValues, allValues);\n    }\n\n    render() {\n        const { fields } = this.state;\n        const count = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        const settings = {\n            props: {\n                layout: 'horizontal',\n                className: styles[\"ant-advanced-search-form\"]\n            },\n            fields: count.map((idx) => ({\n                key: `field-${idx}`,\n                component: [Input, {\n                    placeholder: \"placeholder\"\n                }],\n                hidden: this.state.expand && idx > 5,\n                props: {\n                    label: `Field ${idx}`\n                },\n                decorator: {\n                    rules: [{ required: true, message: 'Input something!' }],\n                },\n            }))\n        };\n\n        return (<>\n            <DynamicForm\n                wrappedComponentRef={this.saveFormRef}\n                settings={settings}\n                fields={fields}\n                onSubmit={this.handleSearch}\n                onValuesChange={this.onValuesChange}\n                onFieldsChange={this.onFieldsChange}\n                render={(keys, fields, _, fieldMap) => <Row gutter={24}>{\n                    Object.keys(keys).map((name) => <Col span={8} key={name}>\n                        <Form.Item {...fieldMap[name].props}>\n                            {fields[name]}\n                        </Form.Item>\n                    </Col>)\n                }</Row>}>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Search\n                        </Button>\n                        <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n                            Clear\n                        </Button>\n                        <a style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n                            Collapse <Icon type={this.state.expand ? 'down' : 'up'} />\n                        </a>\n                    </Col>\n                </Row>\n            </DynamicForm>\n            <div className={styles['search-result-list']}>Search Result List</div>\n        </>\n        );\n    }\n}","import React from 'react';\nimport DynamicForm from 'rc-form-dynamic';\nimport { Form, DatePicker, TimePicker, Button } from 'antd';\n\nconst { MonthPicker, RangePicker } = DatePicker;\n\nexport default class Example extends React.Component {\n\n    // state = {};\n\n    handleSubmit = (e, formRef) => {\n        e.preventDefault();\n        formRef.validateFields((err, fieldsValue) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n\n            console.log('Received values of form: ', fieldsValue);\n            // Should format date value before submit.\n            const rangeValue = fieldsValue['range-picker'];\n            const rangeTimeValue = fieldsValue['range-time-picker'];\n            const values = {\n                ...fieldsValue,\n                'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n                'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n                'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n                'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n                'range-time-picker': [\n                    rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\n                    rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\n                ],\n                'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\n            };\n            console.log('Received values of form: ', values);\n        });\n    };\n\n    // onFieldsChange = (changedFields, allFields) => {\n    //     console.log(changedFields, allFields);\n    //     this.setState(({ fields }) => ({\n    //         fields: { ...fields, ...changedFields },\n    //     }));\n    // }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n        const config = {\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n        };\n        const rangeConfig = {\n            rules: [{ type: 'array', required: true, message: 'Please select time!' }],\n        };\n\n        const settings = {\n            props: {\n                ...formItemLayout\n            },\n            fields: [{\n                key: 'date-picker',\n                component: DatePicker,\n                props: {\n                    label: 'DatePicker'\n                },\n                decorator: config,\n            },{\n                key: 'date-time-picker',\n                component: [DatePicker, {\n                    showTime: true,\n                    format: \"YYYY-MM-DD HH:mm:ss\"\n                }],\n                props: {\n                    label: 'DatePicker[showTime]'\n                },\n                decorator: config,\n            },{\n                key: 'month-picker',\n                component: MonthPicker,\n                props: {\n                    label: 'MonthPicker'\n                },\n                decorator: config,\n            },{\n                key: 'range-picker',\n                component: RangePicker,\n                props: {\n                    label: 'RangePicker'\n                },\n                decorator: rangeConfig,\n            },{\n                key: 'range-time-picker',\n                component: [RangePicker, {\n                    showTime: true,\n                    format: \"YYYY-MM-DD HH:mm:ss\"\n                }],\n                props: {\n                    label: 'RangePicker[showTime]'\n                },\n                decorator: rangeConfig,\n            },{\n                key: 'time-picker',\n                component: TimePicker,\n                props: {\n                    label: 'TimePicker'\n                },\n                decorator: config,\n            }]\n        };\n\n        // const { fields } = this.state;\n        return (<>\n            <DynamicForm\n                settings={settings}\n                onSubmit={this.handleSubmit}\n                // fields={fields}\n                // onFieldsChange={this.onFieldsChange}\n                >\n                <Form.Item wrapperCol={{\n                    xs: { span: 24, offset: 0 },\n                    sm: { span: 16, offset: 8 },\n                }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </DynamicForm>\n        </>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport ExampleList from './components/example-list';\nimport CodeView from './components/codeview.jsx';\nimport { Menu, Icon, Layout } from 'antd';\nimport codegen from 'babel-plugin-codegen/macro'\n\nimport BasicExample from './components/form/example/basic';\nimport CascadeExample from './components/form/example/cascade';\nimport CustomExample from './components/form/example/custom';\nimport DynamicRuleExample from './components/form/example/dynamicRule';\nimport LayoutExample from './components/form/example/layout';\nimport LoginExample from './components/form/example/login';\nimport ModalExample from './components/form/example/modal';\nimport RegisterExample from './components/form/example/register';\nimport SearchExample from './components/form/example/search';\nimport TimeExample from './components/form/example/time';\n\nimport Markdown from 'react-markdown';\n\nconst datas = [\n//   {\n//   label: '文档',\n//   menus: [{\n//     label: 'README',\n//     language: 'markdown',\n//     source: codegen.require('./transform/readPath', 'README.md')\n//   }],\n// }, \n{\n  label: '通用',\n  menus: [{\n    label: '内联登录栏',\n    Component: BasicExample,\n    source: codegen.require('./transform/readFileSync', 'basic')\n  },\n  {\n    label: '登录框',\n    Component: LoginExample,\n    source: codegen.require('./transform/readFileSync', 'login')\n  },\n  {\n    label: '注册新用户',\n    Component: RegisterExample,\n    source: codegen.require('./transform/readFileSync', 'register')\n  },\n  {\n    label: '高级搜索',\n    Component: SearchExample,\n    source: codegen.require('./transform/readFileSync', 'search')\n  },\n  {\n    label: '弹出层中表单',\n    Component: ModalExample,\n    source: codegen.require('./transform/readFileSync', 'modal')\n  },\n  {\n    label: '时间类控件',\n    Component: TimeExample,\n    source: codegen.require('./transform/readFileSync', 'time')\n  },\n  {\n    label: '自定义表单控件',\n    Component: CustomExample,\n    source: codegen.require('./transform/readFileSync', 'custom')\n  },\n  {\n    label: '表单联动',\n    Component: CascadeExample,\n    source: codegen.require('./transform/readFileSync', 'cascade')\n  },\n  {\n    label: '表单布局',\n    Component: LayoutExample,\n    source: codegen.require('./transform/readFileSync', 'layout')\n  },\n  {\n    label: '动态校验规则',\n    Component: DynamicRuleExample,\n    source: codegen.require('./transform/readFileSync', 'dynamicRule')\n  }]\n}\n// , {\n//   label: '自定义渲染',\n//   menus: [{\n//     label: '表单'\n//   }]\n// }\n];\n\nconst ComponentMap = datas.reduce((map, category) => {\n  category.menus.forEach(m => {\n    map[m.label] = m;\n    ;\n  });\n  return map;\n}, {});\n\nconst { Header, Content, Sider } = Layout;\n\nexport default class Main extends React.Component {\n\n  state = {\n    selectedKey: '内联登录栏'\n  }\n  onSelect = (selectedKey) => {\n    this.setState({\n      selectedKey\n    })\n  }\n  render() {\n\n    const { selectedKey } = this.state;\n    const {source, language, Component} = ComponentMap[selectedKey];\n\n    console.log(source);\n    \n    return (\n      <Layout style={{ height: '100vh', background: '#fff' }}>\n        <Header style={{ background: '#fff', height: '48px' }}>\n          <Menu mode=\"horizontal\">\n            <Menu.Item key=\"alipay\">\n              <a href=\"https://www.npmjs.com/package/rc-form-dynamic\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Icon type=\"github\" />\n                Github\n              </a>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Layout >\n          <Sider><ExampleList datas={datas} onSelect={this.onSelect} /></Sider>\n          {\n            source ? <Content className=\"elements-container\" style={{ width: '60%', background: '#fff' }}>{\n              selectedKey==='README'? <Markdown source={source} /> : <CodeView code={source} language={language} />\n            }</Content>: null\n          }\n          \n          {\n            Component ? <Layout style={{ width: '40%', padding: '1em 2em', background: '#FFF' }}>\n            <Content style={{ background: '#fff' }} ><Component /></Content>\n          </Layout> : null\n          }\n          \n        </Layout>\n      </Layout>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Example from './Example';\n\nReactDOM.render(<Example />, document.getElementById('root'));\n"],"sourceRoot":""}